// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmicdealership/vehicle/v1/vehicle_query_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CosmicDealership.Vehicle.V1 {

  /// <summary>Holder for reflection information generated from cosmicdealership/vehicle/v1/vehicle_query_service.proto</summary>
  public static partial class VehicleQueryServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for cosmicdealership/vehicle/v1/vehicle_query_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VehicleQueryServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdjb3NtaWNkZWFsZXJzaGlwL3ZlaGljbGUvdjEvdmVoaWNsZV9xdWVyeV9z",
            "ZXJ2aWNlLnByb3RvEhtjb3NtaWNkZWFsZXJzaGlwLnZlaGljbGUudjEaKWNv",
            "c21pY2RlYWxlcnNoaXAvdmVoaWNsZS92MS92ZWhpY2xlLnByb3RvGiNjb3Nt",
            "aWNkZWFsZXJzaGlwL3VzZXIvdjEvdXNlci5wcm90bxoeZ29vZ2xlL3Byb3Rv",
            "YnVmL3dyYXBwZXJzLnByb3RvIoYBChNMaXN0VmVoaWNsZXNTdWNjZXNzEkEK",
            "CHZlaGljbGVzGAEgAygLMi8uY29zbWljZGVhbGVyc2hpcC52ZWhpY2xlLnYx",
            "LkludmVudG9yaWVkVmVoaWNsZRITCgt0b3RhbF9jb3VudBgCIAEoAxIXCg9u",
            "ZXh0X3BhZ2VfdG9rZW4YAyABKAkipQEKE0xpc3RWZWhpY2xlc1JlcXVlc3QS",
            "LAoEdXNlchgBIAEoCzIeLmNvc21pY2RlYWxlcnNoaXAudXNlci52MS5Vc2Vy",
            "EjAKCnBhZ2VfdG9rZW4YAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSLgoJcGFnZV9zaXplGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUivwEKFExpc3RWZWhpY2xlc1Jlc3BvbnNlEkMKB3N1Y2Nlc3MY",
            "ASABKAsyMC5jb3NtaWNkZWFsZXJzaGlwLnZlaGljbGUudjEuTGlzdFZlaGlj",
            "bGVzU3VjY2Vzc0gAEhwKEnBhZ2VfdG9rZW5faW52YWxpZBgCIAEoCUgAEhsK",
            "EXBhZ2Vfc2l6ZV9pbnZhbGlkGAMgASgJSAASGwoRcGVybWlzc2lvbl9kZW5p",
            "ZWQYBCABKAlIAEIKCghyZXNwb25zZSKAAQocTGlzdEF2YWlsYWJsZVZlaGlj",
            "bGVzUmVxdWVzdBIwCgpwYWdlX3Rva2VuGAIgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEi4KCXBhZ2Vfc2l6ZRgDIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQzMlZhbHVlIqsBCh1MaXN0QXZhaWxhYmxlVmVoaWNsZXNS",
            "ZXNwb25zZRJDCgdzdWNjZXNzGAEgASgLMjAuY29zbWljZGVhbGVyc2hpcC52",
            "ZWhpY2xlLnYxLkxpc3RWZWhpY2xlc1N1Y2Nlc3NIABIcChJwYWdlX3Rva2Vu",
            "X2ludmFsaWQYAiABKAlIABIbChFwYWdlX3NpemVfaW52YWxpZBgDIAEoCUgA",
            "QgoKCHJlc3BvbnNlIlUKEUdldFZlaGljbGVSZXF1ZXN0EiwKBHVzZXIYASAB",
            "KAsyHi5jb3NtaWNkZWFsZXJzaGlwLnVzZXIudjEuVXNlchISCgp2ZWhpY2xl",
            "X2lkGAIgASgJIp4BChJHZXRWZWhpY2xlUmVzcG9uc2USQgoHc3VjY2VzcxgB",
            "IAEoCzIvLmNvc21pY2RlYWxlcnNoaXAudmVoaWNsZS52MS5JbnZlbnRvcmll",
            "ZFZlaGljbGVIABIbChF2ZWhpY2xlX25vdF9mb3VuZBgCIAEoCUgAEhsKEXBl",
            "cm1pc3Npb25fZGVuaWVkGAMgASgJSABCCgoIcmVzcG9uc2UiMAoaR2V0QXZh",
            "aWxhYmxlVmVoaWNsZVJlcXVlc3QSEgoKdmVoaWNsZV9pZBgCIAEoCSKKAQob",
            "R2V0QXZhaWxhYmxlVmVoaWNsZVJlc3BvbnNlEkIKB3N1Y2Nlc3MYASABKAsy",
            "Ly5jb3NtaWNkZWFsZXJzaGlwLnZlaGljbGUudjEuSW52ZW50b3JpZWRWZWhp",
            "Y2xlSAASGwoRdmVoaWNsZV9ub3RfZm91bmQYAiABKAlIAEIKCghyZXNwb25z",
            "ZTKVBAoTVmVoaWNsZVF1ZXJ5U2VydmljZRJzCgxMaXN0VmVoaWNsZXMSMC5j",
            "b3NtaWNkZWFsZXJzaGlwLnZlaGljbGUudjEuTGlzdFZlaGljbGVzUmVxdWVz",
            "dBoxLmNvc21pY2RlYWxlcnNoaXAudmVoaWNsZS52MS5MaXN0VmVoaWNsZXNS",
            "ZXNwb25zZRKOAQoVTGlzdEF2YWlsYWJsZVZlaGljbGVzEjkuY29zbWljZGVh",
            "bGVyc2hpcC52ZWhpY2xlLnYxLkxpc3RBdmFpbGFibGVWZWhpY2xlc1JlcXVl",
            "c3QaOi5jb3NtaWNkZWFsZXJzaGlwLnZlaGljbGUudjEuTGlzdEF2YWlsYWJs",
            "ZVZlaGljbGVzUmVzcG9uc2USbQoKR2V0VmVoaWNsZRIuLmNvc21pY2RlYWxl",
            "cnNoaXAudmVoaWNsZS52MS5HZXRWZWhpY2xlUmVxdWVzdBovLmNvc21pY2Rl",
            "YWxlcnNoaXAudmVoaWNsZS52MS5HZXRWZWhpY2xlUmVzcG9uc2USiAEKE0dl",
            "dEF2YWlsYWJsZVZlaGljbGUSNy5jb3NtaWNkZWFsZXJzaGlwLnZlaGljbGUu",
            "djEuR2V0QXZhaWxhYmxlVmVoaWNsZVJlcXVlc3QaOC5jb3NtaWNkZWFsZXJz",
            "aGlwLnZlaGljbGUudjEuR2V0QXZhaWxhYmxlVmVoaWNsZVJlc3BvbnNlQjta",
            "G2Nvc21pY2RlYWxlcnNoaXAvdmVoaWNsZS92MaoCG0Nvc21pY0RlYWxlcnNo",
            "aXAuVmVoaWNsZS5WMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CosmicDealership.Vehicle.V1.VehicleReflection.Descriptor, global::CosmicDealership.User.V1.UserReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess), global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess.Parser, new[]{ "Vehicles", "TotalCount", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.ListVehiclesRequest), global::CosmicDealership.Vehicle.V1.ListVehiclesRequest.Parser, new[]{ "User", "PageToken", "PageSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.ListVehiclesResponse), global::CosmicDealership.Vehicle.V1.ListVehiclesResponse.Parser, new[]{ "Success", "PageTokenInvalid", "PageSizeInvalid", "PermissionDenied" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.ListAvailableVehiclesRequest), global::CosmicDealership.Vehicle.V1.ListAvailableVehiclesRequest.Parser, new[]{ "PageToken", "PageSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.ListAvailableVehiclesResponse), global::CosmicDealership.Vehicle.V1.ListAvailableVehiclesResponse.Parser, new[]{ "Success", "PageTokenInvalid", "PageSizeInvalid" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.GetVehicleRequest), global::CosmicDealership.Vehicle.V1.GetVehicleRequest.Parser, new[]{ "User", "VehicleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.GetVehicleResponse), global::CosmicDealership.Vehicle.V1.GetVehicleResponse.Parser, new[]{ "Success", "VehicleNotFound", "PermissionDenied" }, new[]{ "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.GetAvailableVehicleRequest), global::CosmicDealership.Vehicle.V1.GetAvailableVehicleRequest.Parser, new[]{ "VehicleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CosmicDealership.Vehicle.V1.GetAvailableVehicleResponse), global::CosmicDealership.Vehicle.V1.GetAvailableVehicleResponse.Parser, new[]{ "Success", "VehicleNotFound" }, new[]{ "Response" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ListVehiclesSuccess : pb::IMessage<ListVehiclesSuccess> {
    private static readonly pb::MessageParser<ListVehiclesSuccess> _parser = new pb::MessageParser<ListVehiclesSuccess>(() => new ListVehiclesSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListVehiclesSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesSuccess(ListVehiclesSuccess other) : this() {
      vehicles_ = other.vehicles_.Clone();
      totalCount_ = other.totalCount_;
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesSuccess Clone() {
      return new ListVehiclesSuccess(this);
    }

    /// <summary>Field number for the "vehicles" field.</summary>
    public const int VehiclesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::CosmicDealership.Vehicle.V1.InventoriedVehicle> _repeated_vehicles_codec
        = pb::FieldCodec.ForMessage(10, global::CosmicDealership.Vehicle.V1.InventoriedVehicle.Parser);
    private readonly pbc::RepeatedField<global::CosmicDealership.Vehicle.V1.InventoriedVehicle> vehicles_ = new pbc::RepeatedField<global::CosmicDealership.Vehicle.V1.InventoriedVehicle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CosmicDealership.Vehicle.V1.InventoriedVehicle> Vehicles {
      get { return vehicles_; }
    }

    /// <summary>Field number for the "total_count" field.</summary>
    public const int TotalCountFieldNumber = 2;
    private long totalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 3;
    private string nextPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListVehiclesSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListVehiclesSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vehicles_.Equals(other.vehicles_)) return false;
      if (TotalCount != other.TotalCount) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vehicles_.GetHashCode();
      if (TotalCount != 0L) hash ^= TotalCount.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vehicles_.WriteTo(output, _repeated_vehicles_codec);
      if (TotalCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(TotalCount);
      }
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vehicles_.CalculateSize(_repeated_vehicles_codec);
      if (TotalCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCount);
      }
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListVehiclesSuccess other) {
      if (other == null) {
        return;
      }
      vehicles_.Add(other.vehicles_);
      if (other.TotalCount != 0L) {
        TotalCount = other.TotalCount;
      }
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vehicles_.AddEntriesFrom(input, _repeated_vehicles_codec);
            break;
          }
          case 16: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 26: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListVehiclesRequest : pb::IMessage<ListVehiclesRequest> {
    private static readonly pb::MessageParser<ListVehiclesRequest> _parser = new pb::MessageParser<ListVehiclesRequest>(() => new ListVehiclesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListVehiclesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesRequest(ListVehiclesRequest other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      PageToken = other.PageToken;
      PageSize = other.PageSize;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesRequest Clone() {
      return new ListVehiclesRequest(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::CosmicDealership.User.V1.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CosmicDealership.User.V1.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_pageToken_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string pageToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = value;
      }
    }


    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageSize_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListVehiclesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListVehiclesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (PageToken != other.PageToken) return false;
      if (PageSize != other.PageSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (pageToken_ != null) hash ^= PageToken.GetHashCode();
      if (pageSize_ != null) hash ^= PageSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (pageToken_ != null) {
        _single_pageToken_codec.WriteTagAndValue(output, PageToken);
      }
      if (pageSize_ != null) {
        _single_pageSize_codec.WriteTagAndValue(output, PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (pageToken_ != null) {
        size += _single_pageToken_codec.CalculateSizeWithTag(PageToken);
      }
      if (pageSize_ != null) {
        size += _single_pageSize_codec.CalculateSizeWithTag(PageSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListVehiclesRequest other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::CosmicDealership.User.V1.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.pageToken_ != null) {
        if (pageToken_ == null || other.PageToken != "") {
          PageToken = other.PageToken;
        }
      }
      if (other.pageSize_ != null) {
        if (pageSize_ == null || other.PageSize != 0) {
          PageSize = other.PageSize;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::CosmicDealership.User.V1.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            string value = _single_pageToken_codec.Read(input);
            if (pageToken_ == null || value != "") {
              PageToken = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageSize_codec.Read(input);
            if (pageSize_ == null || value != 0) {
              PageSize = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListVehiclesResponse : pb::IMessage<ListVehiclesResponse> {
    private static readonly pb::MessageParser<ListVehiclesResponse> _parser = new pb::MessageParser<ListVehiclesResponse>(() => new ListVehiclesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListVehiclesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesResponse(ListVehiclesResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          Success = other.Success.Clone();
          break;
        case ResponseOneofCase.PageTokenInvalid:
          PageTokenInvalid = other.PageTokenInvalid;
          break;
        case ResponseOneofCase.PageSizeInvalid:
          PageSizeInvalid = other.PageSizeInvalid;
          break;
        case ResponseOneofCase.PermissionDenied:
          PermissionDenied = other.PermissionDenied;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListVehiclesResponse Clone() {
      return new ListVehiclesResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess Success {
      get { return responseCase_ == ResponseOneofCase.Success ? (global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Success;
      }
    }

    /// <summary>Field number for the "page_token_invalid" field.</summary>
    public const int PageTokenInvalidFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageTokenInvalid {
      get { return responseCase_ == ResponseOneofCase.PageTokenInvalid ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.PageTokenInvalid;
      }
    }

    /// <summary>Field number for the "page_size_invalid" field.</summary>
    public const int PageSizeInvalidFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageSizeInvalid {
      get { return responseCase_ == ResponseOneofCase.PageSizeInvalid ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.PageSizeInvalid;
      }
    }

    /// <summary>Field number for the "permission_denied" field.</summary>
    public const int PermissionDeniedFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PermissionDenied {
      get { return responseCase_ == ResponseOneofCase.PermissionDenied ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.PermissionDenied;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Success = 1,
      PageTokenInvalid = 2,
      PageSizeInvalid = 3,
      PermissionDenied = 4,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListVehiclesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListVehiclesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Success, other.Success)) return false;
      if (PageTokenInvalid != other.PageTokenInvalid) return false;
      if (PageSizeInvalid != other.PageSizeInvalid) return false;
      if (PermissionDenied != other.PermissionDenied) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Success) hash ^= Success.GetHashCode();
      if (responseCase_ == ResponseOneofCase.PageTokenInvalid) hash ^= PageTokenInvalid.GetHashCode();
      if (responseCase_ == ResponseOneofCase.PageSizeInvalid) hash ^= PageSizeInvalid.GetHashCode();
      if (responseCase_ == ResponseOneofCase.PermissionDenied) hash ^= PermissionDenied.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.Success) {
        output.WriteRawTag(10);
        output.WriteMessage(Success);
      }
      if (responseCase_ == ResponseOneofCase.PageTokenInvalid) {
        output.WriteRawTag(18);
        output.WriteString(PageTokenInvalid);
      }
      if (responseCase_ == ResponseOneofCase.PageSizeInvalid) {
        output.WriteRawTag(26);
        output.WriteString(PageSizeInvalid);
      }
      if (responseCase_ == ResponseOneofCase.PermissionDenied) {
        output.WriteRawTag(34);
        output.WriteString(PermissionDenied);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Success) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (responseCase_ == ResponseOneofCase.PageTokenInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageTokenInvalid);
      }
      if (responseCase_ == ResponseOneofCase.PageSizeInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageSizeInvalid);
      }
      if (responseCase_ == ResponseOneofCase.PermissionDenied) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PermissionDenied);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListVehiclesResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          if (Success == null) {
            Success = new global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess();
          }
          Success.MergeFrom(other.Success);
          break;
        case ResponseOneofCase.PageTokenInvalid:
          PageTokenInvalid = other.PageTokenInvalid;
          break;
        case ResponseOneofCase.PageSizeInvalid:
          PageSizeInvalid = other.PageSizeInvalid;
          break;
        case ResponseOneofCase.PermissionDenied:
          PermissionDenied = other.PermissionDenied;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess subBuilder = new global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess();
            if (responseCase_ == ResponseOneofCase.Success) {
              subBuilder.MergeFrom(Success);
            }
            input.ReadMessage(subBuilder);
            Success = subBuilder;
            break;
          }
          case 18: {
            PageTokenInvalid = input.ReadString();
            break;
          }
          case 26: {
            PageSizeInvalid = input.ReadString();
            break;
          }
          case 34: {
            PermissionDenied = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAvailableVehiclesRequest : pb::IMessage<ListAvailableVehiclesRequest> {
    private static readonly pb::MessageParser<ListAvailableVehiclesRequest> _parser = new pb::MessageParser<ListAvailableVehiclesRequest>(() => new ListAvailableVehiclesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAvailableVehiclesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAvailableVehiclesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAvailableVehiclesRequest(ListAvailableVehiclesRequest other) : this() {
      PageToken = other.PageToken;
      PageSize = other.PageSize;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAvailableVehiclesRequest Clone() {
      return new ListAvailableVehiclesRequest(this);
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_pageToken_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string pageToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = value;
      }
    }


    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageSize_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAvailableVehiclesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAvailableVehiclesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageToken != other.PageToken) return false;
      if (PageSize != other.PageSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pageToken_ != null) hash ^= PageToken.GetHashCode();
      if (pageSize_ != null) hash ^= PageSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pageToken_ != null) {
        _single_pageToken_codec.WriteTagAndValue(output, PageToken);
      }
      if (pageSize_ != null) {
        _single_pageSize_codec.WriteTagAndValue(output, PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pageToken_ != null) {
        size += _single_pageToken_codec.CalculateSizeWithTag(PageToken);
      }
      if (pageSize_ != null) {
        size += _single_pageSize_codec.CalculateSizeWithTag(PageSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAvailableVehiclesRequest other) {
      if (other == null) {
        return;
      }
      if (other.pageToken_ != null) {
        if (pageToken_ == null || other.PageToken != "") {
          PageToken = other.PageToken;
        }
      }
      if (other.pageSize_ != null) {
        if (pageSize_ == null || other.PageSize != 0) {
          PageSize = other.PageSize;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            string value = _single_pageToken_codec.Read(input);
            if (pageToken_ == null || value != "") {
              PageToken = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageSize_codec.Read(input);
            if (pageSize_ == null || value != 0) {
              PageSize = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAvailableVehiclesResponse : pb::IMessage<ListAvailableVehiclesResponse> {
    private static readonly pb::MessageParser<ListAvailableVehiclesResponse> _parser = new pb::MessageParser<ListAvailableVehiclesResponse>(() => new ListAvailableVehiclesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAvailableVehiclesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAvailableVehiclesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAvailableVehiclesResponse(ListAvailableVehiclesResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          Success = other.Success.Clone();
          break;
        case ResponseOneofCase.PageTokenInvalid:
          PageTokenInvalid = other.PageTokenInvalid;
          break;
        case ResponseOneofCase.PageSizeInvalid:
          PageSizeInvalid = other.PageSizeInvalid;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAvailableVehiclesResponse Clone() {
      return new ListAvailableVehiclesResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess Success {
      get { return responseCase_ == ResponseOneofCase.Success ? (global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Success;
      }
    }

    /// <summary>Field number for the "page_token_invalid" field.</summary>
    public const int PageTokenInvalidFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageTokenInvalid {
      get { return responseCase_ == ResponseOneofCase.PageTokenInvalid ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.PageTokenInvalid;
      }
    }

    /// <summary>Field number for the "page_size_invalid" field.</summary>
    public const int PageSizeInvalidFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageSizeInvalid {
      get { return responseCase_ == ResponseOneofCase.PageSizeInvalid ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.PageSizeInvalid;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Success = 1,
      PageTokenInvalid = 2,
      PageSizeInvalid = 3,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAvailableVehiclesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAvailableVehiclesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Success, other.Success)) return false;
      if (PageTokenInvalid != other.PageTokenInvalid) return false;
      if (PageSizeInvalid != other.PageSizeInvalid) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Success) hash ^= Success.GetHashCode();
      if (responseCase_ == ResponseOneofCase.PageTokenInvalid) hash ^= PageTokenInvalid.GetHashCode();
      if (responseCase_ == ResponseOneofCase.PageSizeInvalid) hash ^= PageSizeInvalid.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.Success) {
        output.WriteRawTag(10);
        output.WriteMessage(Success);
      }
      if (responseCase_ == ResponseOneofCase.PageTokenInvalid) {
        output.WriteRawTag(18);
        output.WriteString(PageTokenInvalid);
      }
      if (responseCase_ == ResponseOneofCase.PageSizeInvalid) {
        output.WriteRawTag(26);
        output.WriteString(PageSizeInvalid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Success) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (responseCase_ == ResponseOneofCase.PageTokenInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageTokenInvalid);
      }
      if (responseCase_ == ResponseOneofCase.PageSizeInvalid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageSizeInvalid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAvailableVehiclesResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          if (Success == null) {
            Success = new global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess();
          }
          Success.MergeFrom(other.Success);
          break;
        case ResponseOneofCase.PageTokenInvalid:
          PageTokenInvalid = other.PageTokenInvalid;
          break;
        case ResponseOneofCase.PageSizeInvalid:
          PageSizeInvalid = other.PageSizeInvalid;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess subBuilder = new global::CosmicDealership.Vehicle.V1.ListVehiclesSuccess();
            if (responseCase_ == ResponseOneofCase.Success) {
              subBuilder.MergeFrom(Success);
            }
            input.ReadMessage(subBuilder);
            Success = subBuilder;
            break;
          }
          case 18: {
            PageTokenInvalid = input.ReadString();
            break;
          }
          case 26: {
            PageSizeInvalid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVehicleRequest : pb::IMessage<GetVehicleRequest> {
    private static readonly pb::MessageParser<GetVehicleRequest> _parser = new pb::MessageParser<GetVehicleRequest>(() => new GetVehicleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVehicleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVehicleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVehicleRequest(GetVehicleRequest other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      vehicleId_ = other.vehicleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVehicleRequest Clone() {
      return new GetVehicleRequest(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::CosmicDealership.User.V1.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CosmicDealership.User.V1.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 2;
    private string vehicleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVehicleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVehicleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (VehicleId != other.VehicleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (VehicleId.Length != 0) hash ^= VehicleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (VehicleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VehicleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (VehicleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVehicleRequest other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::CosmicDealership.User.V1.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.VehicleId.Length != 0) {
        VehicleId = other.VehicleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::CosmicDealership.User.V1.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            VehicleId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVehicleResponse : pb::IMessage<GetVehicleResponse> {
    private static readonly pb::MessageParser<GetVehicleResponse> _parser = new pb::MessageParser<GetVehicleResponse>(() => new GetVehicleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVehicleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVehicleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVehicleResponse(GetVehicleResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          Success = other.Success.Clone();
          break;
        case ResponseOneofCase.VehicleNotFound:
          VehicleNotFound = other.VehicleNotFound;
          break;
        case ResponseOneofCase.PermissionDenied:
          PermissionDenied = other.PermissionDenied;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVehicleResponse Clone() {
      return new GetVehicleResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CosmicDealership.Vehicle.V1.InventoriedVehicle Success {
      get { return responseCase_ == ResponseOneofCase.Success ? (global::CosmicDealership.Vehicle.V1.InventoriedVehicle) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Success;
      }
    }

    /// <summary>Field number for the "vehicle_not_found" field.</summary>
    public const int VehicleNotFoundFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VehicleNotFound {
      get { return responseCase_ == ResponseOneofCase.VehicleNotFound ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.VehicleNotFound;
      }
    }

    /// <summary>Field number for the "permission_denied" field.</summary>
    public const int PermissionDeniedFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PermissionDenied {
      get { return responseCase_ == ResponseOneofCase.PermissionDenied ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.PermissionDenied;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Success = 1,
      VehicleNotFound = 2,
      PermissionDenied = 3,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVehicleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVehicleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Success, other.Success)) return false;
      if (VehicleNotFound != other.VehicleNotFound) return false;
      if (PermissionDenied != other.PermissionDenied) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Success) hash ^= Success.GetHashCode();
      if (responseCase_ == ResponseOneofCase.VehicleNotFound) hash ^= VehicleNotFound.GetHashCode();
      if (responseCase_ == ResponseOneofCase.PermissionDenied) hash ^= PermissionDenied.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.Success) {
        output.WriteRawTag(10);
        output.WriteMessage(Success);
      }
      if (responseCase_ == ResponseOneofCase.VehicleNotFound) {
        output.WriteRawTag(18);
        output.WriteString(VehicleNotFound);
      }
      if (responseCase_ == ResponseOneofCase.PermissionDenied) {
        output.WriteRawTag(26);
        output.WriteString(PermissionDenied);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Success) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (responseCase_ == ResponseOneofCase.VehicleNotFound) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleNotFound);
      }
      if (responseCase_ == ResponseOneofCase.PermissionDenied) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PermissionDenied);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVehicleResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          if (Success == null) {
            Success = new global::CosmicDealership.Vehicle.V1.InventoriedVehicle();
          }
          Success.MergeFrom(other.Success);
          break;
        case ResponseOneofCase.VehicleNotFound:
          VehicleNotFound = other.VehicleNotFound;
          break;
        case ResponseOneofCase.PermissionDenied:
          PermissionDenied = other.PermissionDenied;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::CosmicDealership.Vehicle.V1.InventoriedVehicle subBuilder = new global::CosmicDealership.Vehicle.V1.InventoriedVehicle();
            if (responseCase_ == ResponseOneofCase.Success) {
              subBuilder.MergeFrom(Success);
            }
            input.ReadMessage(subBuilder);
            Success = subBuilder;
            break;
          }
          case 18: {
            VehicleNotFound = input.ReadString();
            break;
          }
          case 26: {
            PermissionDenied = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAvailableVehicleRequest : pb::IMessage<GetAvailableVehicleRequest> {
    private static readonly pb::MessageParser<GetAvailableVehicleRequest> _parser = new pb::MessageParser<GetAvailableVehicleRequest>(() => new GetAvailableVehicleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableVehicleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableVehicleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableVehicleRequest(GetAvailableVehicleRequest other) : this() {
      vehicleId_ = other.vehicleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableVehicleRequest Clone() {
      return new GetAvailableVehicleRequest(this);
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 2;
    private string vehicleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableVehicleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableVehicleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VehicleId != other.VehicleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VehicleId.Length != 0) hash ^= VehicleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VehicleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VehicleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VehicleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableVehicleRequest other) {
      if (other == null) {
        return;
      }
      if (other.VehicleId.Length != 0) {
        VehicleId = other.VehicleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            VehicleId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAvailableVehicleResponse : pb::IMessage<GetAvailableVehicleResponse> {
    private static readonly pb::MessageParser<GetAvailableVehicleResponse> _parser = new pb::MessageParser<GetAvailableVehicleResponse>(() => new GetAvailableVehicleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableVehicleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CosmicDealership.Vehicle.V1.VehicleQueryServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableVehicleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableVehicleResponse(GetAvailableVehicleResponse other) : this() {
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          Success = other.Success.Clone();
          break;
        case ResponseOneofCase.VehicleNotFound:
          VehicleNotFound = other.VehicleNotFound;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableVehicleResponse Clone() {
      return new GetAvailableVehicleResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CosmicDealership.Vehicle.V1.InventoriedVehicle Success {
      get { return responseCase_ == ResponseOneofCase.Success ? (global::CosmicDealership.Vehicle.V1.InventoriedVehicle) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Success;
      }
    }

    /// <summary>Field number for the "vehicle_not_found" field.</summary>
    public const int VehicleNotFoundFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VehicleNotFound {
      get { return responseCase_ == ResponseOneofCase.VehicleNotFound ? (string) response_ : ""; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseCase_ = ResponseOneofCase.VehicleNotFound;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Success = 1,
      VehicleNotFound = 2,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableVehicleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableVehicleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Success, other.Success)) return false;
      if (VehicleNotFound != other.VehicleNotFound) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseCase_ == ResponseOneofCase.Success) hash ^= Success.GetHashCode();
      if (responseCase_ == ResponseOneofCase.VehicleNotFound) hash ^= VehicleNotFound.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseCase_ == ResponseOneofCase.Success) {
        output.WriteRawTag(10);
        output.WriteMessage(Success);
      }
      if (responseCase_ == ResponseOneofCase.VehicleNotFound) {
        output.WriteRawTag(18);
        output.WriteString(VehicleNotFound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseCase_ == ResponseOneofCase.Success) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Success);
      }
      if (responseCase_ == ResponseOneofCase.VehicleNotFound) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleNotFound);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableVehicleResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Success:
          if (Success == null) {
            Success = new global::CosmicDealership.Vehicle.V1.InventoriedVehicle();
          }
          Success.MergeFrom(other.Success);
          break;
        case ResponseOneofCase.VehicleNotFound:
          VehicleNotFound = other.VehicleNotFound;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::CosmicDealership.Vehicle.V1.InventoriedVehicle subBuilder = new global::CosmicDealership.Vehicle.V1.InventoriedVehicle();
            if (responseCase_ == ResponseOneofCase.Success) {
              subBuilder.MergeFrom(Success);
            }
            input.ReadMessage(subBuilder);
            Success = subBuilder;
            break;
          }
          case 18: {
            VehicleNotFound = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
