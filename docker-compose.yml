version: '3.4'
services:
  seq:
    image: datalust/seq:5.1
    environment:
      ACCEPT_EULA: "Y"
    ports:
      - "8081:80"
    networks:
      - cosmicdealership
  minio:
    image: minio/minio
    command: ["server", "/data"]
    environment: 
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    ports: 
      - "9000:9000"
    networks:
      - cosmicdealership
  eventstore:
    image: eventstore/eventstore:release-5.0.9
    ports:
      - "2113:2113"
      - "1113:1113"
    environment:
      EVENTSTORE_START_STANDARD_PROJECTIONS: "True"
      EVENTSTORE_RUN_PROJECTIONS: All
      EVENTSTORE_GOSSIP_ON_SINGLE_NODE: "True"
      EVENTSTORE_CLUSTER_DNS: eventstore
      EVENTSTORE_EXT_IP_ADVERTISE_AS: 10.5.0.5
    networks:
      cosmicdealership:
        ipv4_address: 10.5.0.5
  mongo:
    image: bitnami/mongodb:4.4
    environment:
      MONGODB_ROOT_PASSWORD: changeit
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_REPLICA_SET_KEY: changeit
    ports: 
      - "27017:27017"
    networks:
      - cosmicdealership
  upload-api:
    build: ./upload-api
    ports: 
      - "8082:8080"
    environment: 
      SECRET_DIR: /var/secrets
      SERVER_PORT: 8080
      SEQ_SCHEME: http
      SEQ_HOST: seq
      S3_SCHEME: http
      S3_HOST: minio
      S3_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      S3_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      S3_UPLOAD_BUCKET: upload
    depends_on: 
      - seq
      - minio
    networks:
      - cosmicdealership
  vehicle-processor:
    build:
      context: vehicle
      dockerfile: deploy/processor.Dockerfile
    ports:
      - "50051:50051"
    environment:
      DEBUG: "true"
      SERVER_PORT: 50051
      EVENTSTORE_SCHEME: discover
      EVENTSTORE_HOST: eventstore
      EVENTSTORE_PORT: 2113
      SEQ_HOST: seq
    depends_on:
      - seq
      - eventstore
    networks:
      - cosmicdealership
  vehicle-reactor:
    build:
      context: vehicle
      dockerfile: deploy/reactor.Dockerfile
    environment: 
      DEBUG: "true"
      EVENTSTORE_HOST: eventstore
      MONGO_HOST: mongo
      MONGO_USER: root
      MONGO_PASSWORD: changeit
      MONGO_REPLICA_SET: rs0
      SEQ_HOST: seq
    depends_on: 
      - seq
      - eventstore
      - mongo
    networks:
      - cosmicdealership
  vehicle-reader:
    build:
      context: vehicle
      dockerfile: deploy/reader.Dockerfile
    ports:
      - "50052:50052"
    environment: 
      DEBUG: "true"
      SERVER_PORT: 50052
      MONGO_HOST: mongo
      MONGO_USER: root
      MONGO_PASSWORD: changeit
      MONGO_REPLICA_SET: rs0
      SEQ_HOST: seq
    depends_on: 
      - seq
      - eventstore
      - mongo
    networks:
      - cosmicdealership
  graphql-api:
    build:
      context: graphql-api
    ports:
      - "4000:4000"
    environment:
      DEBUG: "true"
      SERVER_PORT: 4000
      VEHICLE_PROCESSOR_HOST: vehicle-processor
      VEHICLE_PROCESSOR_PORT: 50051
      VEHICLE_READER_HOST: vehicle-reader
      VEHICLE_READER_PORT: 50052
      SEQ_HOST: seq
    depends_on: 
      - vehicle-processor
      - vehicle-reactor
      - vehicle-reader
    networks:
      - cosmicdealership
  web-app:
    build:
      context: web-app
      dockerfile: deploy/customer.Dockerfile
    environment:
      GRAPHQL_HOST: localhost
      GRAPHQL_PORT: 4000
    volumes:
      - ./web-app:/app
      - /app/node_modules
    ports:
      - "8080:8080"
      - "35729:35729"
    depends_on:
      - graphql-api

networks:
  cosmicdealership:
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1
