// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tutorial/lease/v1/lease_api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tutorial.Lease.V1 {

  /// <summary>Holder for reflection information generated from tutorial/lease/v1/lease_api.proto</summary>
  public static partial class LeaseApiReflection {

    #region Descriptor
    /// <summary>File descriptor for tutorial/lease/v1/lease_api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LeaseApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiF0dXRvcmlhbC9sZWFzZS92MS9sZWFzZV9hcGkucHJvdG8SEXR1dG9yaWFs",
            "LmxlYXNlLnYxGh10dXRvcmlhbC9sZWFzZS92MS9sZWFzZS5wcm90byI9ChdE",
            "ZWxldGVMZWFzZUV2ZW50UmVxdWVzdBIQCghsZWFzZV9pZBgBIAEoCRIQCghl",
            "dmVudF9pZBgCIAEoBSIrChhEZWxldGVMZWFzZUV2ZW50UmVzcG9uc2USDwoH",
            "bWVzc2FnZRgBIAEoCSI6ChFMaXN0TGVhc2VzUmVxdWVzdBIRCglwYWdlX3Np",
            "emUYASABKAUSEgoKcGFnZV90b2tlbhgCIAEoCSKFAQoSTGlzdExlYXNlc1Jl",
            "c3BvbnNlEigKBmxlYXNlcxgBIAMoCzIYLnR1dG9yaWFsLmxlYXNlLnYxLkxl",
            "YXNlEhcKD3ByZXZfcGFnZV90b2tlbhgCIAEoCRIXCg9uZXh0X3BhZ2VfdG9r",
            "ZW4YAyABKAkSEwoLdG90YWxfY291bnQYBCABKAUiSwoPR2V0TGVhc2VSZXF1",
            "ZXN0EhAKCGxlYXNlX2lkGAEgASgJEiYKBWFzX29mGAIgASgLMhcudHV0b3Jp",
            "YWwubGVhc2UudjEuQXNPZiJGChBHZXRMZWFzZVJlc3BvbnNlEjIKBWxlYXNl",
            "GAEgASgLMiMudHV0b3JpYWwubGVhc2UudjEuTGVhc2VPYnNlcnZhdGlvbiJ5",
            "ChZMaXN0TGVhc2VFdmVudHNSZXF1ZXN0EhAKCGxlYXNlX2lkGAEgASgJEiYK",
            "BWFzX29mGAIgASgLMhcudHV0b3JpYWwubGVhc2UudjEuQXNPZhIRCglwYWdl",
            "X3NpemUYAyABKAUSEgoKcGFnZV90b2tlbhgEIAEoCSKhAQoXTGlzdExlYXNl",
            "RXZlbnRzUmVzcG9uc2USEAoIbGVhc2VfaWQYASABKAkSLQoGZXZlbnRzGAIg",
            "AygLMh0udHV0b3JpYWwubGVhc2UudjEuTGVhc2VFdmVudBIXCg9wcmV2X3Bh",
            "Z2VfdG9rZW4YAyABKAkSFwoPbmV4dF9wYWdlX3Rva2VuGAQgASgJEhMKC3Rv",
            "dGFsX2NvdW50GAUgASgFIj0KEkNyZWF0ZUxlYXNlUmVxdWVzdBInCgVsZWFz",
            "ZRgBIAEoCzIYLnR1dG9yaWFsLmxlYXNlLnYxLkxlYXNlIiYKE0NyZWF0ZUxl",
            "YXNlUmVzcG9uc2USDwoHbWVzc2FnZRgBIAEoCSJeChVUZXJtaW5hdGVMZWFz",
            "ZVJlcXVlc3QSEAoIbGVhc2VfaWQYASABKAkSMwoLdGVybWluYXRpb24YAiAB",
            "KAsyHi50dXRvcmlhbC5sZWFzZS52MS5UZXJtaW5hdGlvbiIpChZUZXJtaW5h",
            "dGVMZWFzZVJlc3BvbnNlEg8KB21lc3NhZ2UYASABKAkiagoWU2NoZWR1bGVQ",
            "YXltZW50UmVxdWVzdBIQCghsZWFzZV9pZBgBIAEoCRI+ChFzY2hlZHVsZWRf",
            "cGF5bWVudBgCIAEoCzIjLnR1dG9yaWFsLmxlYXNlLnYxLlNjaGVkdWxlZFBh",
            "eW1lbnQiKgoXU2NoZWR1bGVQYXltZW50UmVzcG9uc2USDwoHbWVzc2FnZRgB",
            "IAEoCSJnChVSZWNlaXZlUGF5bWVudFJlcXVlc3QSEAoIbGVhc2VfaWQYASAB",
            "KAkSPAoQcmVjZWl2ZWRfcGF5bWVudBgCIAEoCzIiLnR1dG9yaWFsLmxlYXNl",
            "LnYxLlJlY2VpdmVkUGF5bWVudCIpChZSZWNlaXZlUGF5bWVudFJlc3BvbnNl",
            "Eg8KB21lc3NhZ2UYASABKAkypwYKCExlYXNlQVBJEmsKEERlbGV0ZUxlYXNl",
            "RXZlbnQSKi50dXRvcmlhbC5sZWFzZS52MS5EZWxldGVMZWFzZUV2ZW50UmVx",
            "dWVzdBorLnR1dG9yaWFsLmxlYXNlLnYxLkRlbGV0ZUxlYXNlRXZlbnRSZXNw",
            "b25zZRJZCgpMaXN0TGVhc2VzEiQudHV0b3JpYWwubGVhc2UudjEuTGlzdExl",
            "YXNlc1JlcXVlc3QaJS50dXRvcmlhbC5sZWFzZS52MS5MaXN0TGVhc2VzUmVz",
            "cG9uc2USaAoPTGlzdExlYXNlRXZlbnRzEikudHV0b3JpYWwubGVhc2UudjEu",
            "TGlzdExlYXNlRXZlbnRzUmVxdWVzdBoqLnR1dG9yaWFsLmxlYXNlLnYxLkxp",
            "c3RMZWFzZUV2ZW50c1Jlc3BvbnNlElMKCEdldExlYXNlEiIudHV0b3JpYWwu",
            "bGVhc2UudjEuR2V0TGVhc2VSZXF1ZXN0GiMudHV0b3JpYWwubGVhc2UudjEu",
            "R2V0TGVhc2VSZXNwb25zZRJcCgtDcmVhdGVMZWFzZRIlLnR1dG9yaWFsLmxl",
            "YXNlLnYxLkNyZWF0ZUxlYXNlUmVxdWVzdBomLnR1dG9yaWFsLmxlYXNlLnYx",
            "LkNyZWF0ZUxlYXNlUmVzcG9uc2USZQoOVGVybWluYXRlTGVhc2USKC50dXRv",
            "cmlhbC5sZWFzZS52MS5UZXJtaW5hdGVMZWFzZVJlcXVlc3QaKS50dXRvcmlh",
            "bC5sZWFzZS52MS5UZXJtaW5hdGVMZWFzZVJlc3BvbnNlEmgKD1NjaGVkdWxl",
            "UGF5bWVudBIpLnR1dG9yaWFsLmxlYXNlLnYxLlNjaGVkdWxlUGF5bWVudFJl",
            "cXVlc3QaKi50dXRvcmlhbC5sZWFzZS52MS5TY2hlZHVsZVBheW1lbnRSZXNw",
            "b25zZRJlCg5SZWNlaXZlUGF5bWVudBIoLnR1dG9yaWFsLmxlYXNlLnYxLlJl",
            "Y2VpdmVQYXltZW50UmVxdWVzdBopLnR1dG9yaWFsLmxlYXNlLnYxLlJlY2Vp",
            "dmVQYXltZW50UmVzcG9uc2VCXwoVY29tLnR1dG9yaWFsLmxlYXNlLnYxQg1M",
            "ZWFzZUFwaVByb3RvUAFaB2xlYXNldjGiAgNUTFiqAhFUdXRvcmlhbC5MZWFz",
            "ZS5WMcoCEVR1dG9yaWFsXExlYXNlXFYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tutorial.Lease.V1.LeaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.DeleteLeaseEventRequest), global::Tutorial.Lease.V1.DeleteLeaseEventRequest.Parser, new[]{ "LeaseId", "EventId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.DeleteLeaseEventResponse), global::Tutorial.Lease.V1.DeleteLeaseEventResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.ListLeasesRequest), global::Tutorial.Lease.V1.ListLeasesRequest.Parser, new[]{ "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.ListLeasesResponse), global::Tutorial.Lease.V1.ListLeasesResponse.Parser, new[]{ "Leases", "PrevPageToken", "NextPageToken", "TotalCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.GetLeaseRequest), global::Tutorial.Lease.V1.GetLeaseRequest.Parser, new[]{ "LeaseId", "AsOf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.GetLeaseResponse), global::Tutorial.Lease.V1.GetLeaseResponse.Parser, new[]{ "Lease" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.ListLeaseEventsRequest), global::Tutorial.Lease.V1.ListLeaseEventsRequest.Parser, new[]{ "LeaseId", "AsOf", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.ListLeaseEventsResponse), global::Tutorial.Lease.V1.ListLeaseEventsResponse.Parser, new[]{ "LeaseId", "Events", "PrevPageToken", "NextPageToken", "TotalCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.CreateLeaseRequest), global::Tutorial.Lease.V1.CreateLeaseRequest.Parser, new[]{ "Lease" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.CreateLeaseResponse), global::Tutorial.Lease.V1.CreateLeaseResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.TerminateLeaseRequest), global::Tutorial.Lease.V1.TerminateLeaseRequest.Parser, new[]{ "LeaseId", "Termination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.TerminateLeaseResponse), global::Tutorial.Lease.V1.TerminateLeaseResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.SchedulePaymentRequest), global::Tutorial.Lease.V1.SchedulePaymentRequest.Parser, new[]{ "LeaseId", "ScheduledPayment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.SchedulePaymentResponse), global::Tutorial.Lease.V1.SchedulePaymentResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.ReceivePaymentRequest), global::Tutorial.Lease.V1.ReceivePaymentRequest.Parser, new[]{ "LeaseId", "ReceivedPayment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.ReceivePaymentResponse), global::Tutorial.Lease.V1.ReceivePaymentResponse.Parser, new[]{ "Message" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DeleteLeaseEventRequest : pb::IMessage<DeleteLeaseEventRequest> {
    private static readonly pb::MessageParser<DeleteLeaseEventRequest> _parser = new pb::MessageParser<DeleteLeaseEventRequest>(() => new DeleteLeaseEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteLeaseEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLeaseEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLeaseEventRequest(DeleteLeaseEventRequest other) : this() {
      leaseId_ = other.leaseId_;
      eventId_ = other.eventId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLeaseEventRequest Clone() {
      return new DeleteLeaseEventRequest(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 2;
    private int eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteLeaseEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteLeaseEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if (EventId != other.EventId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      if (EventId != 0) hash ^= EventId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      if (EventId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      if (EventId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteLeaseEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      if (other.EventId != 0) {
        EventId = other.EventId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 16: {
            EventId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteLeaseEventResponse : pb::IMessage<DeleteLeaseEventResponse> {
    private static readonly pb::MessageParser<DeleteLeaseEventResponse> _parser = new pb::MessageParser<DeleteLeaseEventResponse>(() => new DeleteLeaseEventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteLeaseEventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLeaseEventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLeaseEventResponse(DeleteLeaseEventResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLeaseEventResponse Clone() {
      return new DeleteLeaseEventResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteLeaseEventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteLeaseEventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteLeaseEventResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListLeasesRequest : pb::IMessage<ListLeasesRequest> {
    private static readonly pb::MessageParser<ListLeasesRequest> _parser = new pb::MessageParser<ListLeasesRequest>(() => new ListLeasesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListLeasesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeasesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeasesRequest(ListLeasesRequest other) : this() {
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeasesRequest Clone() {
      return new ListLeasesRequest(this);
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 1;
    private int pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListLeasesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListLeasesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageSize != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListLeasesRequest other) {
      if (other == null) {
        return;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PageSize = input.ReadInt32();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListLeasesResponse : pb::IMessage<ListLeasesResponse> {
    private static readonly pb::MessageParser<ListLeasesResponse> _parser = new pb::MessageParser<ListLeasesResponse>(() => new ListLeasesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListLeasesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeasesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeasesResponse(ListLeasesResponse other) : this() {
      leases_ = other.leases_.Clone();
      prevPageToken_ = other.prevPageToken_;
      nextPageToken_ = other.nextPageToken_;
      totalCount_ = other.totalCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeasesResponse Clone() {
      return new ListLeasesResponse(this);
    }

    /// <summary>Field number for the "leases" field.</summary>
    public const int LeasesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tutorial.Lease.V1.Lease> _repeated_leases_codec
        = pb::FieldCodec.ForMessage(10, global::Tutorial.Lease.V1.Lease.Parser);
    private readonly pbc::RepeatedField<global::Tutorial.Lease.V1.Lease> leases_ = new pbc::RepeatedField<global::Tutorial.Lease.V1.Lease>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tutorial.Lease.V1.Lease> Leases {
      get { return leases_; }
    }

    /// <summary>Field number for the "prev_page_token" field.</summary>
    public const int PrevPageTokenFieldNumber = 2;
    private string prevPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevPageToken {
      get { return prevPageToken_; }
      set {
        prevPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 3;
    private string nextPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_count" field.</summary>
    public const int TotalCountFieldNumber = 4;
    private int totalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListLeasesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListLeasesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!leases_.Equals(other.leases_)) return false;
      if (PrevPageToken != other.PrevPageToken) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if (TotalCount != other.TotalCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= leases_.GetHashCode();
      if (PrevPageToken.Length != 0) hash ^= PrevPageToken.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (TotalCount != 0) hash ^= TotalCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      leases_.WriteTo(output, _repeated_leases_codec);
      if (PrevPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PrevPageToken);
      }
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NextPageToken);
      }
      if (TotalCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += leases_.CalculateSize(_repeated_leases_codec);
      if (PrevPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevPageToken);
      }
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (TotalCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListLeasesResponse other) {
      if (other == null) {
        return;
      }
      leases_.Add(other.leases_);
      if (other.PrevPageToken.Length != 0) {
        PrevPageToken = other.PrevPageToken;
      }
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      if (other.TotalCount != 0) {
        TotalCount = other.TotalCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            leases_.AddEntriesFrom(input, _repeated_leases_codec);
            break;
          }
          case 18: {
            PrevPageToken = input.ReadString();
            break;
          }
          case 26: {
            NextPageToken = input.ReadString();
            break;
          }
          case 32: {
            TotalCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLeaseRequest : pb::IMessage<GetLeaseRequest> {
    private static readonly pb::MessageParser<GetLeaseRequest> _parser = new pb::MessageParser<GetLeaseRequest>(() => new GetLeaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLeaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLeaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLeaseRequest(GetLeaseRequest other) : this() {
      leaseId_ = other.leaseId_;
      asOf_ = other.asOf_ != null ? other.asOf_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLeaseRequest Clone() {
      return new GetLeaseRequest(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "as_of" field.</summary>
    public const int AsOfFieldNumber = 2;
    private global::Tutorial.Lease.V1.AsOf asOf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tutorial.Lease.V1.AsOf AsOf {
      get { return asOf_; }
      set {
        asOf_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLeaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLeaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if (!object.Equals(AsOf, other.AsOf)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      if (asOf_ != null) hash ^= AsOf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      if (asOf_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AsOf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      if (asOf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AsOf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLeaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      if (other.asOf_ != null) {
        if (asOf_ == null) {
          AsOf = new global::Tutorial.Lease.V1.AsOf();
        }
        AsOf.MergeFrom(other.AsOf);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 18: {
            if (asOf_ == null) {
              AsOf = new global::Tutorial.Lease.V1.AsOf();
            }
            input.ReadMessage(AsOf);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLeaseResponse : pb::IMessage<GetLeaseResponse> {
    private static readonly pb::MessageParser<GetLeaseResponse> _parser = new pb::MessageParser<GetLeaseResponse>(() => new GetLeaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLeaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLeaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLeaseResponse(GetLeaseResponse other) : this() {
      lease_ = other.lease_ != null ? other.lease_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLeaseResponse Clone() {
      return new GetLeaseResponse(this);
    }

    /// <summary>Field number for the "lease" field.</summary>
    public const int LeaseFieldNumber = 1;
    private global::Tutorial.Lease.V1.LeaseObservation lease_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tutorial.Lease.V1.LeaseObservation Lease {
      get { return lease_; }
      set {
        lease_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLeaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLeaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Lease, other.Lease)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lease_ != null) hash ^= Lease.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lease_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Lease);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lease_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lease);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLeaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.lease_ != null) {
        if (lease_ == null) {
          Lease = new global::Tutorial.Lease.V1.LeaseObservation();
        }
        Lease.MergeFrom(other.Lease);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lease_ == null) {
              Lease = new global::Tutorial.Lease.V1.LeaseObservation();
            }
            input.ReadMessage(Lease);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListLeaseEventsRequest : pb::IMessage<ListLeaseEventsRequest> {
    private static readonly pb::MessageParser<ListLeaseEventsRequest> _parser = new pb::MessageParser<ListLeaseEventsRequest>(() => new ListLeaseEventsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListLeaseEventsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeaseEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeaseEventsRequest(ListLeaseEventsRequest other) : this() {
      leaseId_ = other.leaseId_;
      asOf_ = other.asOf_ != null ? other.asOf_.Clone() : null;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeaseEventsRequest Clone() {
      return new ListLeaseEventsRequest(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "as_of" field.</summary>
    public const int AsOfFieldNumber = 2;
    private global::Tutorial.Lease.V1.AsOf asOf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tutorial.Lease.V1.AsOf AsOf {
      get { return asOf_; }
      set {
        asOf_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListLeaseEventsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListLeaseEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if (!object.Equals(AsOf, other.AsOf)) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      if (asOf_ != null) hash ^= AsOf.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      if (asOf_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AsOf);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      if (asOf_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AsOf);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListLeaseEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      if (other.asOf_ != null) {
        if (asOf_ == null) {
          AsOf = new global::Tutorial.Lease.V1.AsOf();
        }
        AsOf.MergeFrom(other.AsOf);
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 18: {
            if (asOf_ == null) {
              AsOf = new global::Tutorial.Lease.V1.AsOf();
            }
            input.ReadMessage(AsOf);
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListLeaseEventsResponse : pb::IMessage<ListLeaseEventsResponse> {
    private static readonly pb::MessageParser<ListLeaseEventsResponse> _parser = new pb::MessageParser<ListLeaseEventsResponse>(() => new ListLeaseEventsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListLeaseEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeaseEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeaseEventsResponse(ListLeaseEventsResponse other) : this() {
      leaseId_ = other.leaseId_;
      events_ = other.events_.Clone();
      prevPageToken_ = other.prevPageToken_;
      nextPageToken_ = other.nextPageToken_;
      totalCount_ = other.totalCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLeaseEventsResponse Clone() {
      return new ListLeaseEventsResponse(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tutorial.Lease.V1.LeaseEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(18, global::Tutorial.Lease.V1.LeaseEvent.Parser);
    private readonly pbc::RepeatedField<global::Tutorial.Lease.V1.LeaseEvent> events_ = new pbc::RepeatedField<global::Tutorial.Lease.V1.LeaseEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tutorial.Lease.V1.LeaseEvent> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "prev_page_token" field.</summary>
    public const int PrevPageTokenFieldNumber = 3;
    private string prevPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevPageToken {
      get { return prevPageToken_; }
      set {
        prevPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 4;
    private string nextPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_count" field.</summary>
    public const int TotalCountFieldNumber = 5;
    private int totalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListLeaseEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListLeaseEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if(!events_.Equals(other.events_)) return false;
      if (PrevPageToken != other.PrevPageToken) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if (TotalCount != other.TotalCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      hash ^= events_.GetHashCode();
      if (PrevPageToken.Length != 0) hash ^= PrevPageToken.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (TotalCount != 0) hash ^= TotalCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (PrevPageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevPageToken);
      }
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NextPageToken);
      }
      if (TotalCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (PrevPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevPageToken);
      }
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (TotalCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListLeaseEventsResponse other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      events_.Add(other.events_);
      if (other.PrevPageToken.Length != 0) {
        PrevPageToken = other.PrevPageToken;
      }
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      if (other.TotalCount != 0) {
        TotalCount = other.TotalCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 18: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 26: {
            PrevPageToken = input.ReadString();
            break;
          }
          case 34: {
            NextPageToken = input.ReadString();
            break;
          }
          case 40: {
            TotalCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateLeaseRequest : pb::IMessage<CreateLeaseRequest> {
    private static readonly pb::MessageParser<CreateLeaseRequest> _parser = new pb::MessageParser<CreateLeaseRequest>(() => new CreateLeaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateLeaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLeaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLeaseRequest(CreateLeaseRequest other) : this() {
      lease_ = other.lease_ != null ? other.lease_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLeaseRequest Clone() {
      return new CreateLeaseRequest(this);
    }

    /// <summary>Field number for the "lease" field.</summary>
    public const int LeaseFieldNumber = 1;
    private global::Tutorial.Lease.V1.Lease lease_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tutorial.Lease.V1.Lease Lease {
      get { return lease_; }
      set {
        lease_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateLeaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateLeaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Lease, other.Lease)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lease_ != null) hash ^= Lease.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lease_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Lease);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lease_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lease);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateLeaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.lease_ != null) {
        if (lease_ == null) {
          Lease = new global::Tutorial.Lease.V1.Lease();
        }
        Lease.MergeFrom(other.Lease);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lease_ == null) {
              Lease = new global::Tutorial.Lease.V1.Lease();
            }
            input.ReadMessage(Lease);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateLeaseResponse : pb::IMessage<CreateLeaseResponse> {
    private static readonly pb::MessageParser<CreateLeaseResponse> _parser = new pb::MessageParser<CreateLeaseResponse>(() => new CreateLeaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateLeaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLeaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLeaseResponse(CreateLeaseResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLeaseResponse Clone() {
      return new CreateLeaseResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateLeaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateLeaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateLeaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TerminateLeaseRequest : pb::IMessage<TerminateLeaseRequest> {
    private static readonly pb::MessageParser<TerminateLeaseRequest> _parser = new pb::MessageParser<TerminateLeaseRequest>(() => new TerminateLeaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TerminateLeaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateLeaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateLeaseRequest(TerminateLeaseRequest other) : this() {
      leaseId_ = other.leaseId_;
      termination_ = other.termination_ != null ? other.termination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateLeaseRequest Clone() {
      return new TerminateLeaseRequest(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "termination" field.</summary>
    public const int TerminationFieldNumber = 2;
    private global::Tutorial.Lease.V1.Termination termination_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tutorial.Lease.V1.Termination Termination {
      get { return termination_; }
      set {
        termination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TerminateLeaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TerminateLeaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if (!object.Equals(Termination, other.Termination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      if (termination_ != null) hash ^= Termination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      if (termination_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Termination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      if (termination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Termination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TerminateLeaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      if (other.termination_ != null) {
        if (termination_ == null) {
          Termination = new global::Tutorial.Lease.V1.Termination();
        }
        Termination.MergeFrom(other.Termination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 18: {
            if (termination_ == null) {
              Termination = new global::Tutorial.Lease.V1.Termination();
            }
            input.ReadMessage(Termination);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TerminateLeaseResponse : pb::IMessage<TerminateLeaseResponse> {
    private static readonly pb::MessageParser<TerminateLeaseResponse> _parser = new pb::MessageParser<TerminateLeaseResponse>(() => new TerminateLeaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TerminateLeaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateLeaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateLeaseResponse(TerminateLeaseResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TerminateLeaseResponse Clone() {
      return new TerminateLeaseResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TerminateLeaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TerminateLeaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TerminateLeaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SchedulePaymentRequest : pb::IMessage<SchedulePaymentRequest> {
    private static readonly pb::MessageParser<SchedulePaymentRequest> _parser = new pb::MessageParser<SchedulePaymentRequest>(() => new SchedulePaymentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SchedulePaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulePaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulePaymentRequest(SchedulePaymentRequest other) : this() {
      leaseId_ = other.leaseId_;
      scheduledPayment_ = other.scheduledPayment_ != null ? other.scheduledPayment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulePaymentRequest Clone() {
      return new SchedulePaymentRequest(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scheduled_payment" field.</summary>
    public const int ScheduledPaymentFieldNumber = 2;
    private global::Tutorial.Lease.V1.ScheduledPayment scheduledPayment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tutorial.Lease.V1.ScheduledPayment ScheduledPayment {
      get { return scheduledPayment_; }
      set {
        scheduledPayment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SchedulePaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SchedulePaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if (!object.Equals(ScheduledPayment, other.ScheduledPayment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      if (scheduledPayment_ != null) hash ^= ScheduledPayment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      if (scheduledPayment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduledPayment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      if (scheduledPayment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledPayment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SchedulePaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      if (other.scheduledPayment_ != null) {
        if (scheduledPayment_ == null) {
          ScheduledPayment = new global::Tutorial.Lease.V1.ScheduledPayment();
        }
        ScheduledPayment.MergeFrom(other.ScheduledPayment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 18: {
            if (scheduledPayment_ == null) {
              ScheduledPayment = new global::Tutorial.Lease.V1.ScheduledPayment();
            }
            input.ReadMessage(ScheduledPayment);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SchedulePaymentResponse : pb::IMessage<SchedulePaymentResponse> {
    private static readonly pb::MessageParser<SchedulePaymentResponse> _parser = new pb::MessageParser<SchedulePaymentResponse>(() => new SchedulePaymentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SchedulePaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulePaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulePaymentResponse(SchedulePaymentResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulePaymentResponse Clone() {
      return new SchedulePaymentResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SchedulePaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SchedulePaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SchedulePaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceivePaymentRequest : pb::IMessage<ReceivePaymentRequest> {
    private static readonly pb::MessageParser<ReceivePaymentRequest> _parser = new pb::MessageParser<ReceivePaymentRequest>(() => new ReceivePaymentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceivePaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivePaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivePaymentRequest(ReceivePaymentRequest other) : this() {
      leaseId_ = other.leaseId_;
      receivedPayment_ = other.receivedPayment_ != null ? other.receivedPayment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivePaymentRequest Clone() {
      return new ReceivePaymentRequest(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "received_payment" field.</summary>
    public const int ReceivedPaymentFieldNumber = 2;
    private global::Tutorial.Lease.V1.ReceivedPayment receivedPayment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tutorial.Lease.V1.ReceivedPayment ReceivedPayment {
      get { return receivedPayment_; }
      set {
        receivedPayment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceivePaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceivePaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if (!object.Equals(ReceivedPayment, other.ReceivedPayment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      if (receivedPayment_ != null) hash ^= ReceivedPayment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      if (receivedPayment_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReceivedPayment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      if (receivedPayment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceivedPayment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceivePaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      if (other.receivedPayment_ != null) {
        if (receivedPayment_ == null) {
          ReceivedPayment = new global::Tutorial.Lease.V1.ReceivedPayment();
        }
        ReceivedPayment.MergeFrom(other.ReceivedPayment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 18: {
            if (receivedPayment_ == null) {
              ReceivedPayment = new global::Tutorial.Lease.V1.ReceivedPayment();
            }
            input.ReadMessage(ReceivedPayment);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceivePaymentResponse : pb::IMessage<ReceivePaymentResponse> {
    private static readonly pb::MessageParser<ReceivePaymentResponse> _parser = new pb::MessageParser<ReceivePaymentResponse>(() => new ReceivePaymentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceivePaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivePaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivePaymentResponse(ReceivePaymentResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivePaymentResponse Clone() {
      return new ReceivePaymentResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceivePaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceivePaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceivePaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
