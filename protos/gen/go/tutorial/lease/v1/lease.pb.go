// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.2
// source: tutorial/lease/v1/lease.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	date "google.golang.org/genproto/googleapis/type/date"
	money "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Date at which a lease is observed.
type AsOn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AsAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=as_at,json=asAt,proto3" json:"as_at,omitempty"`
	AsOf *date.Date           `protobuf:"bytes,2,opt,name=as_of,json=asOf,proto3" json:"as_of,omitempty"`
}

func (x *AsOn) Reset() {
	*x = AsOn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsOn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsOn) ProtoMessage() {}

func (x *AsOn) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsOn.ProtoReflect.Descriptor instead.
func (*AsOn) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{0}
}

func (x *AsOn) GetAsAt() *timestamp.Timestamp {
	if x != nil {
		return x.AsAt
	}
	return nil
}

func (x *AsOn) GetAsOf() *date.Date {
	if x != nil {
		return x.AsOf
	}
	return nil
}

// Lease.
type Lease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaseId              string               `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	UserId               string               `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VehicleId            string               `protobuf:"bytes,3,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	AcceptedAt           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"`
	StartDate            *date.Date           `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	MaturityDate         *date.Date           `protobuf:"bytes,6,opt,name=maturity_date,json=maturityDate,proto3" json:"maturity_date,omitempty"`
	MoneyFactor          float64              `protobuf:"fixed64,7,opt,name=money_factor,json=moneyFactor,proto3" json:"money_factor,omitempty"`
	SalesTaxRate         float64              `protobuf:"fixed64,8,opt,name=sales_tax_rate,json=salesTaxRate,proto3" json:"sales_tax_rate,omitempty"`
	VehicleValue         *money.Money         `protobuf:"bytes,9,opt,name=vehicle_value,json=vehicleValue,proto3" json:"vehicle_value,omitempty"`
	VehicleResidualValue *money.Money         `protobuf:"bytes,10,opt,name=vehicle_residual_value,json=vehicleResidualValue,proto3" json:"vehicle_residual_value,omitempty"`
	DownPayment          *money.Money         `protobuf:"bytes,11,opt,name=down_payment,json=downPayment,proto3" json:"down_payment,omitempty"`
	MonthlyPayment       *money.Money         `protobuf:"bytes,12,opt,name=monthly_payment,json=monthlyPayment,proto3" json:"monthly_payment,omitempty"`
	VehicleOdometer      int32                `protobuf:"varint,13,opt,name=vehicle_odometer,json=vehicleOdometer,proto3" json:"vehicle_odometer,omitempty"`
	MilesPerYear         int32                `protobuf:"varint,14,opt,name=miles_per_year,json=milesPerYear,proto3" json:"miles_per_year,omitempty"`
	MileOverageCharge    *money.Money         `protobuf:"bytes,15,opt,name=mile_overage_charge,json=mileOverageCharge,proto3" json:"mile_overage_charge,omitempty"`
}

func (x *Lease) Reset() {
	*x = Lease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease) ProtoMessage() {}

func (x *Lease) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease.ProtoReflect.Descriptor instead.
func (*Lease) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{1}
}

func (x *Lease) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

func (x *Lease) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Lease) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *Lease) GetAcceptedAt() *timestamp.Timestamp {
	if x != nil {
		return x.AcceptedAt
	}
	return nil
}

func (x *Lease) GetStartDate() *date.Date {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Lease) GetMaturityDate() *date.Date {
	if x != nil {
		return x.MaturityDate
	}
	return nil
}

func (x *Lease) GetMoneyFactor() float64 {
	if x != nil {
		return x.MoneyFactor
	}
	return 0
}

func (x *Lease) GetSalesTaxRate() float64 {
	if x != nil {
		return x.SalesTaxRate
	}
	return 0
}

func (x *Lease) GetVehicleValue() *money.Money {
	if x != nil {
		return x.VehicleValue
	}
	return nil
}

func (x *Lease) GetVehicleResidualValue() *money.Money {
	if x != nil {
		return x.VehicleResidualValue
	}
	return nil
}

func (x *Lease) GetDownPayment() *money.Money {
	if x != nil {
		return x.DownPayment
	}
	return nil
}

func (x *Lease) GetMonthlyPayment() *money.Money {
	if x != nil {
		return x.MonthlyPayment
	}
	return nil
}

func (x *Lease) GetVehicleOdometer() int32 {
	if x != nil {
		return x.VehicleOdometer
	}
	return 0
}

func (x *Lease) GetMilesPerYear() int32 {
	if x != nil {
		return x.MilesPerYear
	}
	return 0
}

func (x *Lease) GetMileOverageCharge() *money.Money {
	if x != nil {
		return x.MileOverageCharge
	}
	return nil
}

// Created payment.
type CreatedPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string               `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	PaymentAmount *money.Money         `protobuf:"bytes,3,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
}

func (x *CreatedPayment) Reset() {
	*x = CreatedPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedPayment) ProtoMessage() {}

func (x *CreatedPayment) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedPayment.ProtoReflect.Descriptor instead.
func (*CreatedPayment) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{2}
}

func (x *CreatedPayment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CreatedPayment) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreatedPayment) GetPaymentAmount() *money.Money {
	if x != nil {
		return x.PaymentAmount
	}
	return nil
}

// Settled payment.
type SettledPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string               `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	SettledAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`
}

func (x *SettledPayment) Reset() {
	*x = SettledPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettledPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettledPayment) ProtoMessage() {}

func (x *SettledPayment) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettledPayment.ProtoReflect.Descriptor instead.
func (*SettledPayment) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{3}
}

func (x *SettledPayment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *SettledPayment) GetSettledAt() *timestamp.Timestamp {
	if x != nil {
		return x.SettledAt
	}
	return nil
}

// Returned payment.
type ReturnedPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId  string               `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ReturnedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=returned_at,json=returnedAt,proto3" json:"returned_at,omitempty"`
	ReturnedReason string               `protobuf:"bytes,3,opt,name=returned_reason,json=returnedReason,proto3" json:"returned_reason,omitempty"`
}

func (x *ReturnedPayment) Reset() {
	*x = ReturnedPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnedPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnedPayment) ProtoMessage() {}

func (x *ReturnedPayment) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnedPayment.ProtoReflect.Descriptor instead.
func (*ReturnedPayment) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{4}
}

func (x *ReturnedPayment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ReturnedPayment) GetReturnedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ReturnedAt
	}
	return nil
}

func (x *ReturnedPayment) GetReturnedReason() string {
	if x != nil {
		return x.ReturnedReason
	}
	return ""
}

// Returned vehicle.
type ReturnedVehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VehicleId       string               `protobuf:"bytes,1,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	ReturnedAt      *timestamp.Timestamp `protobuf:"bytes,2,opt,name=returned_at,json=returnedAt,proto3" json:"returned_at,omitempty"`
	VehicleOdometer int32                `protobuf:"varint,3,opt,name=vehicle_odometer,json=vehicleOdometer,proto3" json:"vehicle_odometer,omitempty"`
	DamageCharge    *money.Money         `protobuf:"bytes,4,opt,name=damage_charge,json=damageCharge,proto3" json:"damage_charge,omitempty"`
}

func (x *ReturnedVehicle) Reset() {
	*x = ReturnedVehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnedVehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnedVehicle) ProtoMessage() {}

func (x *ReturnedVehicle) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnedVehicle.ProtoReflect.Descriptor instead.
func (*ReturnedVehicle) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{5}
}

func (x *ReturnedVehicle) GetVehicleId() string {
	if x != nil {
		return x.VehicleId
	}
	return ""
}

func (x *ReturnedVehicle) GetReturnedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ReturnedAt
	}
	return nil
}

func (x *ReturnedVehicle) GetVehicleOdometer() int32 {
	if x != nil {
		return x.VehicleOdometer
	}
	return 0
}

func (x *ReturnedVehicle) GetDamageCharge() *money.Money {
	if x != nil {
		return x.DamageCharge
	}
	return nil
}

// A payment and its state.
type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// Types that are assignable to State:
	//	*Payment_Created_
	//	*Payment_Settled_
	//	*Payment_Received_
	//	*Payment_Returned_
	State isPayment_State `protobuf_oneof:"state"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{6}
}

func (x *Payment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (m *Payment) GetState() isPayment_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *Payment) GetCreated() *Payment_Created {
	if x, ok := x.GetState().(*Payment_Created_); ok {
		return x.Created
	}
	return nil
}

func (x *Payment) GetSettled() *Payment_Settled {
	if x, ok := x.GetState().(*Payment_Settled_); ok {
		return x.Settled
	}
	return nil
}

func (x *Payment) GetReceived() *Payment_Received {
	if x, ok := x.GetState().(*Payment_Received_); ok {
		return x.Received
	}
	return nil
}

func (x *Payment) GetReturned() *Payment_Returned {
	if x, ok := x.GetState().(*Payment_Returned_); ok {
		return x.Returned
	}
	return nil
}

type isPayment_State interface {
	isPayment_State()
}

type Payment_Created_ struct {
	Created *Payment_Created `protobuf:"bytes,2,opt,name=created,proto3,oneof"`
}

type Payment_Settled_ struct {
	Settled *Payment_Settled `protobuf:"bytes,3,opt,name=settled,proto3,oneof"`
}

type Payment_Received_ struct {
	Received *Payment_Received `protobuf:"bytes,4,opt,name=received,proto3,oneof"`
}

type Payment_Returned_ struct {
	Returned *Payment_Returned `protobuf:"bytes,5,opt,name=returned,proto3,oneof"`
}

func (*Payment_Created_) isPayment_State() {}

func (*Payment_Settled_) isPayment_State() {}

func (*Payment_Received_) isPayment_State() {}

func (*Payment_Returned_) isPayment_State() {}

// Lease observation.
type LeaseObservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObservedAt             *timestamp.Timestamp `protobuf:"bytes,1,opt,name=observed_at,json=observedAt,proto3" json:"observed_at,omitempty"`
	ObservationOrder       int32                `protobuf:"varint,2,opt,name=observation_order,json=observationOrder,proto3" json:"observation_order,omitempty"`
	ObservationDescription string               `protobuf:"bytes,3,opt,name=observation_description,json=observationDescription,proto3" json:"observation_description,omitempty"`
	Lease                  *Lease               `protobuf:"bytes,4,opt,name=lease,proto3" json:"lease,omitempty"`
	// Types that are assignable to ReturnedVehicle:
	//	*LeaseObservation_Value
	ReturnedVehicle          isLeaseObservation_ReturnedVehicle `protobuf_oneof:"returned_vehicle"`
	Payments                 []*Payment                         `protobuf:"bytes,6,rep,name=payments,proto3" json:"payments,omitempty"`
	DaysPastDue              int32                              `protobuf:"varint,7,opt,name=days_past_due,json=daysPastDue,proto3" json:"days_past_due,omitempty"`
	PaymentAmountScheduled   *money.Money                       `protobuf:"bytes,8,opt,name=payment_amount_scheduled,json=paymentAmountScheduled,proto3" json:"payment_amount_scheduled,omitempty"`
	PaymentAmountReceived    *money.Money                       `protobuf:"bytes,9,opt,name=payment_amount_received,json=paymentAmountReceived,proto3" json:"payment_amount_received,omitempty"`
	PaymentAmountChargedOff  *money.Money                       `protobuf:"bytes,10,opt,name=payment_amount_charged_off,json=paymentAmountChargedOff,proto3" json:"payment_amount_charged_off,omitempty"`
	PaymentAmountOutstanding *money.Money                       `protobuf:"bytes,11,opt,name=payment_amount_outstanding,json=paymentAmountOutstanding,proto3" json:"payment_amount_outstanding,omitempty"`
	PaymentAmountCredit      *money.Money                       `protobuf:"bytes,12,opt,name=payment_amount_credit,json=paymentAmountCredit,proto3" json:"payment_amount_credit,omitempty"`
	PaymentAmountUnpaid      *money.Money                       `protobuf:"bytes,13,opt,name=payment_amount_unpaid,json=paymentAmountUnpaid,proto3" json:"payment_amount_unpaid,omitempty"`
}

func (x *LeaseObservation) Reset() {
	*x = LeaseObservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseObservation) ProtoMessage() {}

func (x *LeaseObservation) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseObservation.ProtoReflect.Descriptor instead.
func (*LeaseObservation) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{7}
}

func (x *LeaseObservation) GetObservedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ObservedAt
	}
	return nil
}

func (x *LeaseObservation) GetObservationOrder() int32 {
	if x != nil {
		return x.ObservationOrder
	}
	return 0
}

func (x *LeaseObservation) GetObservationDescription() string {
	if x != nil {
		return x.ObservationDescription
	}
	return ""
}

func (x *LeaseObservation) GetLease() *Lease {
	if x != nil {
		return x.Lease
	}
	return nil
}

func (m *LeaseObservation) GetReturnedVehicle() isLeaseObservation_ReturnedVehicle {
	if m != nil {
		return m.ReturnedVehicle
	}
	return nil
}

func (x *LeaseObservation) GetValue() *ReturnedVehicle {
	if x, ok := x.GetReturnedVehicle().(*LeaseObservation_Value); ok {
		return x.Value
	}
	return nil
}

func (x *LeaseObservation) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *LeaseObservation) GetDaysPastDue() int32 {
	if x != nil {
		return x.DaysPastDue
	}
	return 0
}

func (x *LeaseObservation) GetPaymentAmountScheduled() *money.Money {
	if x != nil {
		return x.PaymentAmountScheduled
	}
	return nil
}

func (x *LeaseObservation) GetPaymentAmountReceived() *money.Money {
	if x != nil {
		return x.PaymentAmountReceived
	}
	return nil
}

func (x *LeaseObservation) GetPaymentAmountChargedOff() *money.Money {
	if x != nil {
		return x.PaymentAmountChargedOff
	}
	return nil
}

func (x *LeaseObservation) GetPaymentAmountOutstanding() *money.Money {
	if x != nil {
		return x.PaymentAmountOutstanding
	}
	return nil
}

func (x *LeaseObservation) GetPaymentAmountCredit() *money.Money {
	if x != nil {
		return x.PaymentAmountCredit
	}
	return nil
}

func (x *LeaseObservation) GetPaymentAmountUnpaid() *money.Money {
	if x != nil {
		return x.PaymentAmountUnpaid
	}
	return nil
}

type isLeaseObservation_ReturnedVehicle interface {
	isLeaseObservation_ReturnedVehicle()
}

type LeaseObservation_Value struct {
	Value *ReturnedVehicle `protobuf:"bytes,5,opt,name=value,proto3,oneof"`
}

func (*LeaseObservation_Value) isLeaseObservation_ReturnedVehicle() {}

type Payment_Created struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAmount *money.Money         `protobuf:"bytes,1,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Payment_Created) Reset() {
	*x = Payment_Created{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment_Created) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment_Created) ProtoMessage() {}

func (x *Payment_Created) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment_Created.ProtoReflect.Descriptor instead.
func (*Payment_Created) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Payment_Created) GetPaymentAmount() *money.Money {
	if x != nil {
		return x.PaymentAmount
	}
	return nil
}

func (x *Payment_Created) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Payment_Settled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAmount *money.Money         `protobuf:"bytes,1,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SettledAt     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`
}

func (x *Payment_Settled) Reset() {
	*x = Payment_Settled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment_Settled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment_Settled) ProtoMessage() {}

func (x *Payment_Settled) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment_Settled.ProtoReflect.Descriptor instead.
func (*Payment_Settled) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Payment_Settled) GetPaymentAmount() *money.Money {
	if x != nil {
		return x.PaymentAmount
	}
	return nil
}

func (x *Payment_Settled) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Payment_Settled) GetSettledAt() *timestamp.Timestamp {
	if x != nil {
		return x.SettledAt
	}
	return nil
}

type Payment_Received struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAmount *money.Money         `protobuf:"bytes,1,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SettledAt     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`
	ReceivedAt    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
}

func (x *Payment_Received) Reset() {
	*x = Payment_Received{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment_Received) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment_Received) ProtoMessage() {}

func (x *Payment_Received) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment_Received.ProtoReflect.Descriptor instead.
func (*Payment_Received) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Payment_Received) GetPaymentAmount() *money.Money {
	if x != nil {
		return x.PaymentAmount
	}
	return nil
}

func (x *Payment_Received) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Payment_Received) GetSettledAt() *timestamp.Timestamp {
	if x != nil {
		return x.SettledAt
	}
	return nil
}

func (x *Payment_Received) GetReceivedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

type Payment_Returned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAmount *money.Money         `protobuf:"bytes,1,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SettledAt     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`
	// Types that are assignable to ReceivedAt:
	//	*Payment_Returned_Value
	ReceivedAt isPayment_Returned_ReceivedAt `protobuf_oneof:"received_at"`
	ReturnedAt *timestamp.Timestamp          `protobuf:"bytes,5,opt,name=returned_at,json=returnedAt,proto3" json:"returned_at,omitempty"`
}

func (x *Payment_Returned) Reset() {
	*x = Payment_Returned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment_Returned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment_Returned) ProtoMessage() {}

func (x *Payment_Returned) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment_Returned.ProtoReflect.Descriptor instead.
func (*Payment_Returned) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{6, 3}
}

func (x *Payment_Returned) GetPaymentAmount() *money.Money {
	if x != nil {
		return x.PaymentAmount
	}
	return nil
}

func (x *Payment_Returned) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Payment_Returned) GetSettledAt() *timestamp.Timestamp {
	if x != nil {
		return x.SettledAt
	}
	return nil
}

func (m *Payment_Returned) GetReceivedAt() isPayment_Returned_ReceivedAt {
	if m != nil {
		return m.ReceivedAt
	}
	return nil
}

func (x *Payment_Returned) GetValue() *timestamp.Timestamp {
	if x, ok := x.GetReceivedAt().(*Payment_Returned_Value); ok {
		return x.Value
	}
	return nil
}

func (x *Payment_Returned) GetReturnedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ReturnedAt
	}
	return nil
}

type isPayment_Returned_ReceivedAt interface {
	isPayment_Returned_ReceivedAt()
}

type Payment_Returned_Value struct {
	Value *timestamp.Timestamp `protobuf:"bytes,4,opt,name=value,proto3,oneof"`
}

func (*Payment_Returned_Value) isPayment_Returned_ReceivedAt() {}

var File_tutorial_lease_v1_lease_proto protoreflect.FileDescriptor

var file_tutorial_lease_v1_lease_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2f, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x04, 0x41, 0x73, 0x4f, 0x6e, 0x12, 0x2f, 0x0a, 0x05,
	0x61, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x61, 0x73, 0x41, 0x74, 0x12, 0x26, 0x0a,
	0x05, 0x61, 0x73, 0x5f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x04, 0x61, 0x73, 0x4f, 0x66, 0x22, 0xd6, 0x05, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x30, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x36, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x6d, 0x61, 0x74,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x61, 0x78, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0c, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x16, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52,
	0x14, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52,
	0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x6c, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x64, 0x6f, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x70, 0x65,
	0x72, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x69,
	0x6c, 0x65, 0x73, 0x50, 0x65, 0x72, 0x59, 0x65, 0x61, 0x72, 0x12, 0x42, 0x0a, 0x13, 0x6d, 0x69,
	0x6c, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x11, 0x6d, 0x69, 0x6c,
	0x65, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0xad,
	0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a,
	0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0xd1, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6f,
	0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x76,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x4f, 0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x0d, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0c, 0x64, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x22, 0xb6, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74,
	0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x41, 0x0a,
	0x08, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x1a, 0x7f, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x1a, 0xba, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xf8,
	0x01, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xbb, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x65,
	0x74, 0x74, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0xde, 0x06, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x37, 0x0a, 0x17, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d,
	0x64, 0x61, 0x79, 0x73, 0x5f, 0x70, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x61, 0x79, 0x73, 0x50, 0x61, 0x73, 0x74, 0x44, 0x75, 0x65,
	0x12, 0x4c, 0x0a, 0x18, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x16, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x4a,
	0x0a, 0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x1a, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x52, 0x17, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x12, 0x50, 0x0a, 0x1a, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x75,
	0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x18, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a,
	0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x46, 0x0a, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x42, 0x12, 0x0a,
	0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x42, 0x27, 0x5a, 0x11, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2f, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0xaa, 0x02, 0x11, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_tutorial_lease_v1_lease_proto_rawDescOnce sync.Once
	file_tutorial_lease_v1_lease_proto_rawDescData = file_tutorial_lease_v1_lease_proto_rawDesc
)

func file_tutorial_lease_v1_lease_proto_rawDescGZIP() []byte {
	file_tutorial_lease_v1_lease_proto_rawDescOnce.Do(func() {
		file_tutorial_lease_v1_lease_proto_rawDescData = protoimpl.X.CompressGZIP(file_tutorial_lease_v1_lease_proto_rawDescData)
	})
	return file_tutorial_lease_v1_lease_proto_rawDescData
}

var file_tutorial_lease_v1_lease_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_tutorial_lease_v1_lease_proto_goTypes = []interface{}{
	(*AsOn)(nil),                // 0: tutorial.lease.v1.AsOn
	(*Lease)(nil),               // 1: tutorial.lease.v1.Lease
	(*CreatedPayment)(nil),      // 2: tutorial.lease.v1.CreatedPayment
	(*SettledPayment)(nil),      // 3: tutorial.lease.v1.SettledPayment
	(*ReturnedPayment)(nil),     // 4: tutorial.lease.v1.ReturnedPayment
	(*ReturnedVehicle)(nil),     // 5: tutorial.lease.v1.ReturnedVehicle
	(*Payment)(nil),             // 6: tutorial.lease.v1.Payment
	(*LeaseObservation)(nil),    // 7: tutorial.lease.v1.LeaseObservation
	(*Payment_Created)(nil),     // 8: tutorial.lease.v1.Payment.Created
	(*Payment_Settled)(nil),     // 9: tutorial.lease.v1.Payment.Settled
	(*Payment_Received)(nil),    // 10: tutorial.lease.v1.Payment.Received
	(*Payment_Returned)(nil),    // 11: tutorial.lease.v1.Payment.Returned
	(*timestamp.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*date.Date)(nil),           // 13: google.type.Date
	(*money.Money)(nil),         // 14: google.type.Money
}
var file_tutorial_lease_v1_lease_proto_depIdxs = []int32{
	12, // 0: tutorial.lease.v1.AsOn.as_at:type_name -> google.protobuf.Timestamp
	13, // 1: tutorial.lease.v1.AsOn.as_of:type_name -> google.type.Date
	12, // 2: tutorial.lease.v1.Lease.accepted_at:type_name -> google.protobuf.Timestamp
	13, // 3: tutorial.lease.v1.Lease.start_date:type_name -> google.type.Date
	13, // 4: tutorial.lease.v1.Lease.maturity_date:type_name -> google.type.Date
	14, // 5: tutorial.lease.v1.Lease.vehicle_value:type_name -> google.type.Money
	14, // 6: tutorial.lease.v1.Lease.vehicle_residual_value:type_name -> google.type.Money
	14, // 7: tutorial.lease.v1.Lease.down_payment:type_name -> google.type.Money
	14, // 8: tutorial.lease.v1.Lease.monthly_payment:type_name -> google.type.Money
	14, // 9: tutorial.lease.v1.Lease.mile_overage_charge:type_name -> google.type.Money
	12, // 10: tutorial.lease.v1.CreatedPayment.created_at:type_name -> google.protobuf.Timestamp
	14, // 11: tutorial.lease.v1.CreatedPayment.payment_amount:type_name -> google.type.Money
	12, // 12: tutorial.lease.v1.SettledPayment.settled_at:type_name -> google.protobuf.Timestamp
	12, // 13: tutorial.lease.v1.ReturnedPayment.returned_at:type_name -> google.protobuf.Timestamp
	12, // 14: tutorial.lease.v1.ReturnedVehicle.returned_at:type_name -> google.protobuf.Timestamp
	14, // 15: tutorial.lease.v1.ReturnedVehicle.damage_charge:type_name -> google.type.Money
	8,  // 16: tutorial.lease.v1.Payment.created:type_name -> tutorial.lease.v1.Payment.Created
	9,  // 17: tutorial.lease.v1.Payment.settled:type_name -> tutorial.lease.v1.Payment.Settled
	10, // 18: tutorial.lease.v1.Payment.received:type_name -> tutorial.lease.v1.Payment.Received
	11, // 19: tutorial.lease.v1.Payment.returned:type_name -> tutorial.lease.v1.Payment.Returned
	12, // 20: tutorial.lease.v1.LeaseObservation.observed_at:type_name -> google.protobuf.Timestamp
	1,  // 21: tutorial.lease.v1.LeaseObservation.lease:type_name -> tutorial.lease.v1.Lease
	5,  // 22: tutorial.lease.v1.LeaseObservation.value:type_name -> tutorial.lease.v1.ReturnedVehicle
	6,  // 23: tutorial.lease.v1.LeaseObservation.payments:type_name -> tutorial.lease.v1.Payment
	14, // 24: tutorial.lease.v1.LeaseObservation.payment_amount_scheduled:type_name -> google.type.Money
	14, // 25: tutorial.lease.v1.LeaseObservation.payment_amount_received:type_name -> google.type.Money
	14, // 26: tutorial.lease.v1.LeaseObservation.payment_amount_charged_off:type_name -> google.type.Money
	14, // 27: tutorial.lease.v1.LeaseObservation.payment_amount_outstanding:type_name -> google.type.Money
	14, // 28: tutorial.lease.v1.LeaseObservation.payment_amount_credit:type_name -> google.type.Money
	14, // 29: tutorial.lease.v1.LeaseObservation.payment_amount_unpaid:type_name -> google.type.Money
	14, // 30: tutorial.lease.v1.Payment.Created.payment_amount:type_name -> google.type.Money
	12, // 31: tutorial.lease.v1.Payment.Created.created_at:type_name -> google.protobuf.Timestamp
	14, // 32: tutorial.lease.v1.Payment.Settled.payment_amount:type_name -> google.type.Money
	12, // 33: tutorial.lease.v1.Payment.Settled.created_at:type_name -> google.protobuf.Timestamp
	12, // 34: tutorial.lease.v1.Payment.Settled.settled_at:type_name -> google.protobuf.Timestamp
	14, // 35: tutorial.lease.v1.Payment.Received.payment_amount:type_name -> google.type.Money
	12, // 36: tutorial.lease.v1.Payment.Received.created_at:type_name -> google.protobuf.Timestamp
	12, // 37: tutorial.lease.v1.Payment.Received.settled_at:type_name -> google.protobuf.Timestamp
	12, // 38: tutorial.lease.v1.Payment.Received.received_at:type_name -> google.protobuf.Timestamp
	14, // 39: tutorial.lease.v1.Payment.Returned.payment_amount:type_name -> google.type.Money
	12, // 40: tutorial.lease.v1.Payment.Returned.created_at:type_name -> google.protobuf.Timestamp
	12, // 41: tutorial.lease.v1.Payment.Returned.settled_at:type_name -> google.protobuf.Timestamp
	12, // 42: tutorial.lease.v1.Payment.Returned.value:type_name -> google.protobuf.Timestamp
	12, // 43: tutorial.lease.v1.Payment.Returned.returned_at:type_name -> google.protobuf.Timestamp
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_tutorial_lease_v1_lease_proto_init() }
func file_tutorial_lease_v1_lease_proto_init() {
	if File_tutorial_lease_v1_lease_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tutorial_lease_v1_lease_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsOn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettledPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnedPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnedVehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseObservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment_Created); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment_Settled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment_Received); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment_Returned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tutorial_lease_v1_lease_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Payment_Created_)(nil),
		(*Payment_Settled_)(nil),
		(*Payment_Received_)(nil),
		(*Payment_Returned_)(nil),
	}
	file_tutorial_lease_v1_lease_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*LeaseObservation_Value)(nil),
	}
	file_tutorial_lease_v1_lease_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*Payment_Returned_Value)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tutorial_lease_v1_lease_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tutorial_lease_v1_lease_proto_goTypes,
		DependencyIndexes: file_tutorial_lease_v1_lease_proto_depIdxs,
		MessageInfos:      file_tutorial_lease_v1_lease_proto_msgTypes,
	}.Build()
	File_tutorial_lease_v1_lease_proto = out.File
	file_tutorial_lease_v1_lease_proto_rawDesc = nil
	file_tutorial_lease_v1_lease_proto_goTypes = nil
	file_tutorial_lease_v1_lease_proto_depIdxs = nil
}
