// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.2
// source: tutorial/lease/v1/lease.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	date "google.golang.org/genproto/googleapis/type/date"
	money "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Status of the lease.
type LeaseStatus int32

const (
	LeaseStatus_LEASE_STATUS_UNSPECIFIED LeaseStatus = 0
	LeaseStatus_LEASE_STATUS_OUTSTANDING LeaseStatus = 1
	LeaseStatus_LEASE_STATUS_TERMINATED  LeaseStatus = 2
)

// Enum value maps for LeaseStatus.
var (
	LeaseStatus_name = map[int32]string{
		0: "LEASE_STATUS_UNSPECIFIED",
		1: "LEASE_STATUS_OUTSTANDING",
		2: "LEASE_STATUS_TERMINATED",
	}
	LeaseStatus_value = map[string]int32{
		"LEASE_STATUS_UNSPECIFIED": 0,
		"LEASE_STATUS_OUTSTANDING": 1,
		"LEASE_STATUS_TERMINATED":  2,
	}
)

func (x LeaseStatus) Enum() *LeaseStatus {
	p := new(LeaseStatus)
	*p = x
	return p
}

func (x LeaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_tutorial_lease_v1_lease_proto_enumTypes[0].Descriptor()
}

func (LeaseStatus) Type() protoreflect.EnumType {
	return &file_tutorial_lease_v1_lease_proto_enumTypes[0]
}

func (x LeaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeaseStatus.Descriptor instead.
func (LeaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{0}
}

// Date at which a lease is observed.
type AsOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AsAtTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=as_at_time,json=asAtTime,proto3" json:"as_at_time,omitempty"`
	AsOnDate *date.Date           `protobuf:"bytes,2,opt,name=as_on_date,json=asOnDate,proto3" json:"as_on_date,omitempty"`
}

func (x *AsOf) Reset() {
	*x = AsOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsOf) ProtoMessage() {}

func (x *AsOf) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsOf.ProtoReflect.Descriptor instead.
func (*AsOf) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{0}
}

func (x *AsOf) GetAsAtTime() *timestamp.Timestamp {
	if x != nil {
		return x.AsAtTime
	}
	return nil
}

func (x *AsOf) GetAsOnDate() *date.Date {
	if x != nil {
		return x.AsOnDate
	}
	return nil
}

// Lease static information.
type Lease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaseId              string       `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	UserId               string       `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommencementDate     *date.Date   `protobuf:"bytes,3,opt,name=commencement_date,json=commencementDate,proto3" json:"commencement_date,omitempty"`
	ExpirationDate       *date.Date   `protobuf:"bytes,4,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	MonthlyPaymentAmount *money.Money `protobuf:"bytes,5,opt,name=monthly_payment_amount,json=monthlyPaymentAmount,proto3" json:"monthly_payment_amount,omitempty"`
}

func (x *Lease) Reset() {
	*x = Lease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lease) ProtoMessage() {}

func (x *Lease) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lease.ProtoReflect.Descriptor instead.
func (*Lease) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{1}
}

func (x *Lease) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

func (x *Lease) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Lease) GetCommencementDate() *date.Date {
	if x != nil {
		return x.CommencementDate
	}
	return nil
}

func (x *Lease) GetExpirationDate() *date.Date {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *Lease) GetMonthlyPaymentAmount() *money.Money {
	if x != nil {
		return x.MonthlyPaymentAmount
	}
	return nil
}

// Scheduled payment.
type ScheduledPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId       string       `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	ScheduledDate   *date.Date   `protobuf:"bytes,2,opt,name=scheduled_date,json=scheduledDate,proto3" json:"scheduled_date,omitempty"`
	ScheduledAmount *money.Money `protobuf:"bytes,3,opt,name=scheduled_amount,json=scheduledAmount,proto3" json:"scheduled_amount,omitempty"`
}

func (x *ScheduledPayment) Reset() {
	*x = ScheduledPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledPayment) ProtoMessage() {}

func (x *ScheduledPayment) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledPayment.ProtoReflect.Descriptor instead.
func (*ScheduledPayment) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduledPayment) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *ScheduledPayment) GetScheduledDate() *date.Date {
	if x != nil {
		return x.ScheduledDate
	}
	return nil
}

func (x *ScheduledPayment) GetScheduledAmount() *money.Money {
	if x != nil {
		return x.ScheduledAmount
	}
	return nil
}

// Received payment.
type ReceivedPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId      string       `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	ReceivedDate   *date.Date   `protobuf:"bytes,2,opt,name=received_date,json=receivedDate,proto3" json:"received_date,omitempty"`
	ReceivedAmount *money.Money `protobuf:"bytes,3,opt,name=received_amount,json=receivedAmount,proto3" json:"received_amount,omitempty"`
}

func (x *ReceivedPayment) Reset() {
	*x = ReceivedPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedPayment) ProtoMessage() {}

func (x *ReceivedPayment) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedPayment.ProtoReflect.Descriptor instead.
func (*ReceivedPayment) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{3}
}

func (x *ReceivedPayment) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *ReceivedPayment) GetReceivedDate() *date.Date {
	if x != nil {
		return x.ReceivedDate
	}
	return nil
}

func (x *ReceivedPayment) GetReceivedAmount() *money.Money {
	if x != nil {
		return x.ReceivedAmount
	}
	return nil
}

// Termination of a lease.
type Termination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TerminationDate   *date.Date `protobuf:"bytes,1,opt,name=termination_date,json=terminationDate,proto3" json:"termination_date,omitempty"`
	TerminationReason string     `protobuf:"bytes,2,opt,name=termination_reason,json=terminationReason,proto3" json:"termination_reason,omitempty"`
}

func (x *Termination) Reset() {
	*x = Termination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Termination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Termination) ProtoMessage() {}

func (x *Termination) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Termination.ProtoReflect.Descriptor instead.
func (*Termination) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{4}
}

func (x *Termination) GetTerminationDate() *date.Date {
	if x != nil {
		return x.TerminationDate
	}
	return nil
}

func (x *Termination) GetTerminationReason() string {
	if x != nil {
		return x.TerminationReason
	}
	return ""
}

// Lease event that has occurred.
type LeaseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId            int32                `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventCreatedTime   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=event_created_time,json=eventCreatedTime,proto3" json:"event_created_time,omitempty"`
	EventEffectiveDate *date.Date           `protobuf:"bytes,3,opt,name=event_effective_date,json=eventEffectiveDate,proto3" json:"event_effective_date,omitempty"`
	EventType          string               `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventPayload       string               `protobuf:"bytes,5,opt,name=event_payload,json=eventPayload,proto3" json:"event_payload,omitempty"`
}

func (x *LeaseEvent) Reset() {
	*x = LeaseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseEvent) ProtoMessage() {}

func (x *LeaseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseEvent.ProtoReflect.Descriptor instead.
func (*LeaseEvent) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{5}
}

func (x *LeaseEvent) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *LeaseEvent) GetEventCreatedTime() *timestamp.Timestamp {
	if x != nil {
		return x.EventCreatedTime
	}
	return nil
}

func (x *LeaseEvent) GetEventEffectiveDate() *date.Date {
	if x != nil {
		return x.EventEffectiveDate
	}
	return nil
}

func (x *LeaseEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *LeaseEvent) GetEventPayload() string {
	if x != nil {
		return x.EventPayload
	}
	return ""
}

// Observation of a lease at a point in time.
type LeaseObservation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaseId              string               `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	UserId               string               `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAtTime        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at_time,json=createdAtTime,proto3" json:"created_at_time,omitempty"`
	UpdatedAtTime        *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at_time,json=updatedAtTime,proto3" json:"updated_at_time,omitempty"`
	UpdatedOnDate        *date.Date           `protobuf:"bytes,5,opt,name=updated_on_date,json=updatedOnDate,proto3" json:"updated_on_date,omitempty"`
	CommencementDate     *date.Date           `protobuf:"bytes,6,opt,name=commencement_date,json=commencementDate,proto3" json:"commencement_date,omitempty"`
	ExpirationDate       *date.Date           `protobuf:"bytes,7,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	MonthlyPaymentAmount *money.Money         `protobuf:"bytes,8,opt,name=monthly_payment_amount,json=monthlyPaymentAmount,proto3" json:"monthly_payment_amount,omitempty"`
	TotalScheduled       *money.Money         `protobuf:"bytes,9,opt,name=total_scheduled,json=totalScheduled,proto3" json:"total_scheduled,omitempty"`
	TotalPaid            *money.Money         `protobuf:"bytes,10,opt,name=total_paid,json=totalPaid,proto3" json:"total_paid,omitempty"`
	AmountDue            *money.Money         `protobuf:"bytes,11,opt,name=amount_due,json=amountDue,proto3" json:"amount_due,omitempty"`
	LeaseStatus          LeaseStatus          `protobuf:"varint,12,opt,name=lease_status,json=leaseStatus,proto3,enum=tutorial.lease.v1.LeaseStatus" json:"lease_status,omitempty"`
	TerminatedDate       *date.Date           `protobuf:"bytes,13,opt,name=terminated_date,json=terminatedDate,proto3" json:"terminated_date,omitempty"`
}

func (x *LeaseObservation) Reset() {
	*x = LeaseObservation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tutorial_lease_v1_lease_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaseObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaseObservation) ProtoMessage() {}

func (x *LeaseObservation) ProtoReflect() protoreflect.Message {
	mi := &file_tutorial_lease_v1_lease_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaseObservation.ProtoReflect.Descriptor instead.
func (*LeaseObservation) Descriptor() ([]byte, []int) {
	return file_tutorial_lease_v1_lease_proto_rawDescGZIP(), []int{6}
}

func (x *LeaseObservation) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

func (x *LeaseObservation) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LeaseObservation) GetCreatedAtTime() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAtTime
	}
	return nil
}

func (x *LeaseObservation) GetUpdatedAtTime() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAtTime
	}
	return nil
}

func (x *LeaseObservation) GetUpdatedOnDate() *date.Date {
	if x != nil {
		return x.UpdatedOnDate
	}
	return nil
}

func (x *LeaseObservation) GetCommencementDate() *date.Date {
	if x != nil {
		return x.CommencementDate
	}
	return nil
}

func (x *LeaseObservation) GetExpirationDate() *date.Date {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *LeaseObservation) GetMonthlyPaymentAmount() *money.Money {
	if x != nil {
		return x.MonthlyPaymentAmount
	}
	return nil
}

func (x *LeaseObservation) GetTotalScheduled() *money.Money {
	if x != nil {
		return x.TotalScheduled
	}
	return nil
}

func (x *LeaseObservation) GetTotalPaid() *money.Money {
	if x != nil {
		return x.TotalPaid
	}
	return nil
}

func (x *LeaseObservation) GetAmountDue() *money.Money {
	if x != nil {
		return x.AmountDue
	}
	return nil
}

func (x *LeaseObservation) GetLeaseStatus() LeaseStatus {
	if x != nil {
		return x.LeaseStatus
	}
	return LeaseStatus_LEASE_STATUS_UNSPECIFIED
}

func (x *LeaseObservation) GetTerminatedDate() *date.Date {
	if x != nil {
		return x.TerminatedDate
	}
	return nil
}

var File_tutorial_lease_v1_lease_proto protoreflect.FileDescriptor

var file_tutorial_lease_v1_lease_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2f, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x04, 0x41, 0x73, 0x4f, 0x66, 0x12, 0x38, 0x0a, 0x0a,
	0x61, 0x73, 0x5f, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x61, 0x73,
	0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x61, 0x73, 0x5f, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x08, 0x61,
	0x73, 0x4f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x05, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x48, 0x0a, 0x16, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x14, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x10,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x7a, 0x0a, 0x0b, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x10, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a,
	0x12, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xfa, 0x01, 0x0a,
	0x0a, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x43, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x12, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xf1, 0x05, 0x0a, 0x10, 0x4c, 0x65,
	0x61, 0x73, 0x65, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x48, 0x0a, 0x16, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x14, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x6c, 0x79, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0a, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x12, 0x41,
	0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x2a, 0x66, 0x0a,
	0x0b, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x4c, 0x45,
	0x41, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x55, 0x54, 0x53, 0x54,
	0x41, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4c, 0x45, 0x41, 0x53,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x49, 0x4e, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x42, 0x66, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0a,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x11, 0x74, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2f, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x54, 0x4c, 0x58, 0xaa, 0x02, 0x11, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c,
	0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x54, 0x75, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x5c, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tutorial_lease_v1_lease_proto_rawDescOnce sync.Once
	file_tutorial_lease_v1_lease_proto_rawDescData = file_tutorial_lease_v1_lease_proto_rawDesc
)

func file_tutorial_lease_v1_lease_proto_rawDescGZIP() []byte {
	file_tutorial_lease_v1_lease_proto_rawDescOnce.Do(func() {
		file_tutorial_lease_v1_lease_proto_rawDescData = protoimpl.X.CompressGZIP(file_tutorial_lease_v1_lease_proto_rawDescData)
	})
	return file_tutorial_lease_v1_lease_proto_rawDescData
}

var file_tutorial_lease_v1_lease_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tutorial_lease_v1_lease_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_tutorial_lease_v1_lease_proto_goTypes = []interface{}{
	(LeaseStatus)(0),            // 0: tutorial.lease.v1.LeaseStatus
	(*AsOf)(nil),                // 1: tutorial.lease.v1.AsOf
	(*Lease)(nil),               // 2: tutorial.lease.v1.Lease
	(*ScheduledPayment)(nil),    // 3: tutorial.lease.v1.ScheduledPayment
	(*ReceivedPayment)(nil),     // 4: tutorial.lease.v1.ReceivedPayment
	(*Termination)(nil),         // 5: tutorial.lease.v1.Termination
	(*LeaseEvent)(nil),          // 6: tutorial.lease.v1.LeaseEvent
	(*LeaseObservation)(nil),    // 7: tutorial.lease.v1.LeaseObservation
	(*timestamp.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*date.Date)(nil),           // 9: google.type.Date
	(*money.Money)(nil),         // 10: google.type.Money
}
var file_tutorial_lease_v1_lease_proto_depIdxs = []int32{
	8,  // 0: tutorial.lease.v1.AsOf.as_at_time:type_name -> google.protobuf.Timestamp
	9,  // 1: tutorial.lease.v1.AsOf.as_on_date:type_name -> google.type.Date
	9,  // 2: tutorial.lease.v1.Lease.commencement_date:type_name -> google.type.Date
	9,  // 3: tutorial.lease.v1.Lease.expiration_date:type_name -> google.type.Date
	10, // 4: tutorial.lease.v1.Lease.monthly_payment_amount:type_name -> google.type.Money
	9,  // 5: tutorial.lease.v1.ScheduledPayment.scheduled_date:type_name -> google.type.Date
	10, // 6: tutorial.lease.v1.ScheduledPayment.scheduled_amount:type_name -> google.type.Money
	9,  // 7: tutorial.lease.v1.ReceivedPayment.received_date:type_name -> google.type.Date
	10, // 8: tutorial.lease.v1.ReceivedPayment.received_amount:type_name -> google.type.Money
	9,  // 9: tutorial.lease.v1.Termination.termination_date:type_name -> google.type.Date
	8,  // 10: tutorial.lease.v1.LeaseEvent.event_created_time:type_name -> google.protobuf.Timestamp
	9,  // 11: tutorial.lease.v1.LeaseEvent.event_effective_date:type_name -> google.type.Date
	8,  // 12: tutorial.lease.v1.LeaseObservation.created_at_time:type_name -> google.protobuf.Timestamp
	8,  // 13: tutorial.lease.v1.LeaseObservation.updated_at_time:type_name -> google.protobuf.Timestamp
	9,  // 14: tutorial.lease.v1.LeaseObservation.updated_on_date:type_name -> google.type.Date
	9,  // 15: tutorial.lease.v1.LeaseObservation.commencement_date:type_name -> google.type.Date
	9,  // 16: tutorial.lease.v1.LeaseObservation.expiration_date:type_name -> google.type.Date
	10, // 17: tutorial.lease.v1.LeaseObservation.monthly_payment_amount:type_name -> google.type.Money
	10, // 18: tutorial.lease.v1.LeaseObservation.total_scheduled:type_name -> google.type.Money
	10, // 19: tutorial.lease.v1.LeaseObservation.total_paid:type_name -> google.type.Money
	10, // 20: tutorial.lease.v1.LeaseObservation.amount_due:type_name -> google.type.Money
	0,  // 21: tutorial.lease.v1.LeaseObservation.lease_status:type_name -> tutorial.lease.v1.LeaseStatus
	9,  // 22: tutorial.lease.v1.LeaseObservation.terminated_date:type_name -> google.type.Date
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_tutorial_lease_v1_lease_proto_init() }
func file_tutorial_lease_v1_lease_proto_init() {
	if File_tutorial_lease_v1_lease_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tutorial_lease_v1_lease_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Termination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tutorial_lease_v1_lease_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaseObservation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tutorial_lease_v1_lease_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tutorial_lease_v1_lease_proto_goTypes,
		DependencyIndexes: file_tutorial_lease_v1_lease_proto_depIdxs,
		EnumInfos:         file_tutorial_lease_v1_lease_proto_enumTypes,
		MessageInfos:      file_tutorial_lease_v1_lease_proto_msgTypes,
	}.Build()
	File_tutorial_lease_v1_lease_proto = out.File
	file_tutorial_lease_v1_lease_proto_rawDesc = nil
	file_tutorial_lease_v1_lease_proto_goTypes = nil
	file_tutorial_lease_v1_lease_proto_depIdxs = nil
}
