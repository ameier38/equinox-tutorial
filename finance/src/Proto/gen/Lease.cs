// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tutorial/lease/v1/lease.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tutorial.Lease.V1 {

  /// <summary>Holder for reflection information generated from tutorial/lease/v1/lease.proto</summary>
  public static partial class LeaseReflection {

    #region Descriptor
    /// <summary>File descriptor for tutorial/lease/v1/lease.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LeaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch10dXRvcmlhbC9sZWFzZS92MS9sZWFzZS5wcm90bxIRdHV0b3JpYWwubGVh",
            "c2UudjEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aFmdvb2ds",
            "ZS90eXBlL2RhdGUucHJvdG8aF2dvb2dsZS90eXBlL21vbmV5LnByb3RvIl0K",
            "BEFzT2YSLgoKYXNfYXRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASJQoKYXNfb25fZGF0ZRgCIAEoCzIRLmdvb2dsZS50eXBlLkRh",
            "dGUiuAEKBUxlYXNlEhAKCGxlYXNlX2lkGAEgASgJEg8KB3VzZXJfaWQYAiAB",
            "KAkSLAoRY29tbWVuY2VtZW50X2RhdGUYAyABKAsyES5nb29nbGUudHlwZS5E",
            "YXRlEioKD2V4cGlyYXRpb25fZGF0ZRgEIAEoCzIRLmdvb2dsZS50eXBlLkRh",
            "dGUSMgoWbW9udGhseV9wYXltZW50X2Ftb3VudBgFIAEoCzISLmdvb2dsZS50",
            "eXBlLk1vbmV5In8KEFNjaGVkdWxlZFBheW1lbnQSEgoKcGF5bWVudF9pZBgB",
            "IAEoCRIpCg5zY2hlZHVsZWRfZGF0ZRgCIAEoCzIRLmdvb2dsZS50eXBlLkRh",
            "dGUSLAoQc2NoZWR1bGVkX2Ftb3VudBgDIAEoCzISLmdvb2dsZS50eXBlLk1v",
            "bmV5InwKD1JlY2VpdmVkUGF5bWVudBISCgpwYXltZW50X2lkGAEgASgJEigK",
            "DXJlY2VpdmVkX2RhdGUYAiABKAsyES5nb29nbGUudHlwZS5EYXRlEisKD3Jl",
            "Y2VpdmVkX2Ftb3VudBgDIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5IlYKC1Rl",
            "cm1pbmF0aW9uEisKEHRlcm1pbmF0aW9uX2RhdGUYASABKAsyES5nb29nbGUu",
            "dHlwZS5EYXRlEhoKEnRlcm1pbmF0aW9uX3JlYXNvbhgCIAEoCSKyAQoKTGVh",
            "c2VFdmVudBIQCghldmVudF9pZBgBIAEoBRI2ChJldmVudF9jcmVhdGVkX3Rp",
            "bWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KFGV2ZW50",
            "X2VmZmVjdGl2ZV9kYXRlGAMgASgLMhEuZ29vZ2xlLnR5cGUuRGF0ZRISCgpl",
            "dmVudF90eXBlGAQgASgJEhUKDWV2ZW50X3BheWxvYWQYBSABKAkiuAQKEExl",
            "YXNlT2JzZXJ2YXRpb24SEAoIbGVhc2VfaWQYASABKAkSDwoHdXNlcl9pZBgC",
            "IAEoCRIzCg9jcmVhdGVkX2F0X3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEjMKD3VwZGF0ZWRfYXRfdGltZRgEIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASKgoPdXBkYXRlZF9vbl9kYXRlGAUgASgL",
            "MhEuZ29vZ2xlLnR5cGUuRGF0ZRIsChFjb21tZW5jZW1lbnRfZGF0ZRgGIAEo",
            "CzIRLmdvb2dsZS50eXBlLkRhdGUSKgoPZXhwaXJhdGlvbl9kYXRlGAcgASgL",
            "MhEuZ29vZ2xlLnR5cGUuRGF0ZRIyChZtb250aGx5X3BheW1lbnRfYW1vdW50",
            "GAggASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXkSKwoPdG90YWxfc2NoZWR1bGVk",
            "GAkgASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXkSJgoKdG90YWxfcGFpZBgKIAEo",
            "CzISLmdvb2dsZS50eXBlLk1vbmV5EiYKCmFtb3VudF9kdWUYCyABKAsyEi5n",
            "b29nbGUudHlwZS5Nb25leRI0CgxsZWFzZV9zdGF0dXMYDCABKA4yHi50dXRv",
            "cmlhbC5sZWFzZS52MS5MZWFzZVN0YXR1cxIqCg90ZXJtaW5hdGVkX2RhdGUY",
            "DSABKAsyES5nb29nbGUudHlwZS5EYXRlKmYKC0xlYXNlU3RhdHVzEhwKGExF",
            "QVNFX1NUQVRVU19VTlNQRUNJRklFRBAAEhwKGExFQVNFX1NUQVRVU19PVVRT",
            "VEFORElORxABEhsKF0xFQVNFX1NUQVRVU19URVJNSU5BVEVEEAJCZgoVY29t",
            "LnR1dG9yaWFsLmxlYXNlLnYxQgpMZWFzZVByb3RvUAFaEXR1dG9yaWFsL2xl",
            "YXNlL3YxogIDVExYqgIRVHV0b3JpYWwuTGVhc2UuVjHKAhFUdXRvcmlhbFxM",
            "ZWFzZVxWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Google.Type.MoneyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Tutorial.Lease.V1.LeaseStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.AsOf), global::Tutorial.Lease.V1.AsOf.Parser, new[]{ "AsAtTime", "AsOnDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.Lease), global::Tutorial.Lease.V1.Lease.Parser, new[]{ "LeaseId", "UserId", "CommencementDate", "ExpirationDate", "MonthlyPaymentAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.ScheduledPayment), global::Tutorial.Lease.V1.ScheduledPayment.Parser, new[]{ "PaymentId", "ScheduledDate", "ScheduledAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.ReceivedPayment), global::Tutorial.Lease.V1.ReceivedPayment.Parser, new[]{ "PaymentId", "ReceivedDate", "ReceivedAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.Termination), global::Tutorial.Lease.V1.Termination.Parser, new[]{ "TerminationDate", "TerminationReason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.LeaseEvent), global::Tutorial.Lease.V1.LeaseEvent.Parser, new[]{ "EventId", "EventCreatedTime", "EventEffectiveDate", "EventType", "EventPayload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tutorial.Lease.V1.LeaseObservation), global::Tutorial.Lease.V1.LeaseObservation.Parser, new[]{ "LeaseId", "UserId", "CreatedAtTime", "UpdatedAtTime", "UpdatedOnDate", "CommencementDate", "ExpirationDate", "MonthlyPaymentAmount", "TotalScheduled", "TotalPaid", "AmountDue", "LeaseStatus", "TerminatedDate" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Status of the lease.
  /// </summary>
  public enum LeaseStatus {
    [pbr::OriginalName("LEASE_STATUS_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("LEASE_STATUS_OUTSTANDING")] Outstanding = 1,
    [pbr::OriginalName("LEASE_STATUS_TERMINATED")] Terminated = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Date at which a lease is observed.
  /// </summary>
  public sealed partial class AsOf : pb::IMessage<AsOf> {
    private static readonly pb::MessageParser<AsOf> _parser = new pb::MessageParser<AsOf>(() => new AsOf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AsOf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsOf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsOf(AsOf other) : this() {
      asAtTime_ = other.asAtTime_ != null ? other.asAtTime_.Clone() : null;
      asOnDate_ = other.asOnDate_ != null ? other.asOnDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsOf Clone() {
      return new AsOf(this);
    }

    /// <summary>Field number for the "as_at_time" field.</summary>
    public const int AsAtTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp asAtTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp AsAtTime {
      get { return asAtTime_; }
      set {
        asAtTime_ = value;
      }
    }

    /// <summary>Field number for the "as_on_date" field.</summary>
    public const int AsOnDateFieldNumber = 2;
    private global::Google.Type.Date asOnDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date AsOnDate {
      get { return asOnDate_; }
      set {
        asOnDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AsOf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AsOf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AsAtTime, other.AsAtTime)) return false;
      if (!object.Equals(AsOnDate, other.AsOnDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (asAtTime_ != null) hash ^= AsAtTime.GetHashCode();
      if (asOnDate_ != null) hash ^= AsOnDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (asAtTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AsAtTime);
      }
      if (asOnDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AsOnDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (asAtTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AsAtTime);
      }
      if (asOnDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AsOnDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AsOf other) {
      if (other == null) {
        return;
      }
      if (other.asAtTime_ != null) {
        if (asAtTime_ == null) {
          AsAtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        AsAtTime.MergeFrom(other.AsAtTime);
      }
      if (other.asOnDate_ != null) {
        if (asOnDate_ == null) {
          AsOnDate = new global::Google.Type.Date();
        }
        AsOnDate.MergeFrom(other.AsOnDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (asAtTime_ == null) {
              AsAtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(AsAtTime);
            break;
          }
          case 18: {
            if (asOnDate_ == null) {
              AsOnDate = new global::Google.Type.Date();
            }
            input.ReadMessage(AsOnDate);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Lease static information.
  /// </summary>
  public sealed partial class Lease : pb::IMessage<Lease> {
    private static readonly pb::MessageParser<Lease> _parser = new pb::MessageParser<Lease>(() => new Lease());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Lease> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lease() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lease(Lease other) : this() {
      leaseId_ = other.leaseId_;
      userId_ = other.userId_;
      commencementDate_ = other.commencementDate_ != null ? other.commencementDate_.Clone() : null;
      expirationDate_ = other.expirationDate_ != null ? other.expirationDate_.Clone() : null;
      monthlyPaymentAmount_ = other.monthlyPaymentAmount_ != null ? other.monthlyPaymentAmount_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Lease Clone() {
      return new Lease(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commencement_date" field.</summary>
    public const int CommencementDateFieldNumber = 3;
    private global::Google.Type.Date commencementDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date CommencementDate {
      get { return commencementDate_; }
      set {
        commencementDate_ = value;
      }
    }

    /// <summary>Field number for the "expiration_date" field.</summary>
    public const int ExpirationDateFieldNumber = 4;
    private global::Google.Type.Date expirationDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date ExpirationDate {
      get { return expirationDate_; }
      set {
        expirationDate_ = value;
      }
    }

    /// <summary>Field number for the "monthly_payment_amount" field.</summary>
    public const int MonthlyPaymentAmountFieldNumber = 5;
    private global::Google.Type.Money monthlyPaymentAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money MonthlyPaymentAmount {
      get { return monthlyPaymentAmount_; }
      set {
        monthlyPaymentAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Lease);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Lease other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if (UserId != other.UserId) return false;
      if (!object.Equals(CommencementDate, other.CommencementDate)) return false;
      if (!object.Equals(ExpirationDate, other.ExpirationDate)) return false;
      if (!object.Equals(MonthlyPaymentAmount, other.MonthlyPaymentAmount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (commencementDate_ != null) hash ^= CommencementDate.GetHashCode();
      if (expirationDate_ != null) hash ^= ExpirationDate.GetHashCode();
      if (monthlyPaymentAmount_ != null) hash ^= MonthlyPaymentAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (commencementDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CommencementDate);
      }
      if (expirationDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExpirationDate);
      }
      if (monthlyPaymentAmount_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MonthlyPaymentAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (commencementDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommencementDate);
      }
      if (expirationDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationDate);
      }
      if (monthlyPaymentAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonthlyPaymentAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Lease other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.commencementDate_ != null) {
        if (commencementDate_ == null) {
          CommencementDate = new global::Google.Type.Date();
        }
        CommencementDate.MergeFrom(other.CommencementDate);
      }
      if (other.expirationDate_ != null) {
        if (expirationDate_ == null) {
          ExpirationDate = new global::Google.Type.Date();
        }
        ExpirationDate.MergeFrom(other.ExpirationDate);
      }
      if (other.monthlyPaymentAmount_ != null) {
        if (monthlyPaymentAmount_ == null) {
          MonthlyPaymentAmount = new global::Google.Type.Money();
        }
        MonthlyPaymentAmount.MergeFrom(other.MonthlyPaymentAmount);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            if (commencementDate_ == null) {
              CommencementDate = new global::Google.Type.Date();
            }
            input.ReadMessage(CommencementDate);
            break;
          }
          case 34: {
            if (expirationDate_ == null) {
              ExpirationDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ExpirationDate);
            break;
          }
          case 42: {
            if (monthlyPaymentAmount_ == null) {
              MonthlyPaymentAmount = new global::Google.Type.Money();
            }
            input.ReadMessage(MonthlyPaymentAmount);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Scheduled payment.
  /// </summary>
  public sealed partial class ScheduledPayment : pb::IMessage<ScheduledPayment> {
    private static readonly pb::MessageParser<ScheduledPayment> _parser = new pb::MessageParser<ScheduledPayment>(() => new ScheduledPayment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScheduledPayment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduledPayment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduledPayment(ScheduledPayment other) : this() {
      paymentId_ = other.paymentId_;
      scheduledDate_ = other.scheduledDate_ != null ? other.scheduledDate_.Clone() : null;
      scheduledAmount_ = other.scheduledAmount_ != null ? other.scheduledAmount_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScheduledPayment Clone() {
      return new ScheduledPayment(this);
    }

    /// <summary>Field number for the "payment_id" field.</summary>
    public const int PaymentIdFieldNumber = 1;
    private string paymentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentId {
      get { return paymentId_; }
      set {
        paymentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scheduled_date" field.</summary>
    public const int ScheduledDateFieldNumber = 2;
    private global::Google.Type.Date scheduledDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date ScheduledDate {
      get { return scheduledDate_; }
      set {
        scheduledDate_ = value;
      }
    }

    /// <summary>Field number for the "scheduled_amount" field.</summary>
    public const int ScheduledAmountFieldNumber = 3;
    private global::Google.Type.Money scheduledAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money ScheduledAmount {
      get { return scheduledAmount_; }
      set {
        scheduledAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScheduledPayment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScheduledPayment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PaymentId != other.PaymentId) return false;
      if (!object.Equals(ScheduledDate, other.ScheduledDate)) return false;
      if (!object.Equals(ScheduledAmount, other.ScheduledAmount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PaymentId.Length != 0) hash ^= PaymentId.GetHashCode();
      if (scheduledDate_ != null) hash ^= ScheduledDate.GetHashCode();
      if (scheduledAmount_ != null) hash ^= ScheduledAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PaymentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PaymentId);
      }
      if (scheduledDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduledDate);
      }
      if (scheduledAmount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ScheduledAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PaymentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaymentId);
      }
      if (scheduledDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledDate);
      }
      if (scheduledAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScheduledPayment other) {
      if (other == null) {
        return;
      }
      if (other.PaymentId.Length != 0) {
        PaymentId = other.PaymentId;
      }
      if (other.scheduledDate_ != null) {
        if (scheduledDate_ == null) {
          ScheduledDate = new global::Google.Type.Date();
        }
        ScheduledDate.MergeFrom(other.ScheduledDate);
      }
      if (other.scheduledAmount_ != null) {
        if (scheduledAmount_ == null) {
          ScheduledAmount = new global::Google.Type.Money();
        }
        ScheduledAmount.MergeFrom(other.ScheduledAmount);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PaymentId = input.ReadString();
            break;
          }
          case 18: {
            if (scheduledDate_ == null) {
              ScheduledDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ScheduledDate);
            break;
          }
          case 26: {
            if (scheduledAmount_ == null) {
              ScheduledAmount = new global::Google.Type.Money();
            }
            input.ReadMessage(ScheduledAmount);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Received payment.
  /// </summary>
  public sealed partial class ReceivedPayment : pb::IMessage<ReceivedPayment> {
    private static readonly pb::MessageParser<ReceivedPayment> _parser = new pb::MessageParser<ReceivedPayment>(() => new ReceivedPayment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceivedPayment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedPayment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedPayment(ReceivedPayment other) : this() {
      paymentId_ = other.paymentId_;
      receivedDate_ = other.receivedDate_ != null ? other.receivedDate_.Clone() : null;
      receivedAmount_ = other.receivedAmount_ != null ? other.receivedAmount_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceivedPayment Clone() {
      return new ReceivedPayment(this);
    }

    /// <summary>Field number for the "payment_id" field.</summary>
    public const int PaymentIdFieldNumber = 1;
    private string paymentId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentId {
      get { return paymentId_; }
      set {
        paymentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "received_date" field.</summary>
    public const int ReceivedDateFieldNumber = 2;
    private global::Google.Type.Date receivedDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date ReceivedDate {
      get { return receivedDate_; }
      set {
        receivedDate_ = value;
      }
    }

    /// <summary>Field number for the "received_amount" field.</summary>
    public const int ReceivedAmountFieldNumber = 3;
    private global::Google.Type.Money receivedAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money ReceivedAmount {
      get { return receivedAmount_; }
      set {
        receivedAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceivedPayment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceivedPayment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PaymentId != other.PaymentId) return false;
      if (!object.Equals(ReceivedDate, other.ReceivedDate)) return false;
      if (!object.Equals(ReceivedAmount, other.ReceivedAmount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PaymentId.Length != 0) hash ^= PaymentId.GetHashCode();
      if (receivedDate_ != null) hash ^= ReceivedDate.GetHashCode();
      if (receivedAmount_ != null) hash ^= ReceivedAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PaymentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PaymentId);
      }
      if (receivedDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReceivedDate);
      }
      if (receivedAmount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReceivedAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PaymentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaymentId);
      }
      if (receivedDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceivedDate);
      }
      if (receivedAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceivedAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceivedPayment other) {
      if (other == null) {
        return;
      }
      if (other.PaymentId.Length != 0) {
        PaymentId = other.PaymentId;
      }
      if (other.receivedDate_ != null) {
        if (receivedDate_ == null) {
          ReceivedDate = new global::Google.Type.Date();
        }
        ReceivedDate.MergeFrom(other.ReceivedDate);
      }
      if (other.receivedAmount_ != null) {
        if (receivedAmount_ == null) {
          ReceivedAmount = new global::Google.Type.Money();
        }
        ReceivedAmount.MergeFrom(other.ReceivedAmount);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PaymentId = input.ReadString();
            break;
          }
          case 18: {
            if (receivedDate_ == null) {
              ReceivedDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ReceivedDate);
            break;
          }
          case 26: {
            if (receivedAmount_ == null) {
              ReceivedAmount = new global::Google.Type.Money();
            }
            input.ReadMessage(ReceivedAmount);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Termination of a lease.
  /// </summary>
  public sealed partial class Termination : pb::IMessage<Termination> {
    private static readonly pb::MessageParser<Termination> _parser = new pb::MessageParser<Termination>(() => new Termination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Termination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Termination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Termination(Termination other) : this() {
      terminationDate_ = other.terminationDate_ != null ? other.terminationDate_.Clone() : null;
      terminationReason_ = other.terminationReason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Termination Clone() {
      return new Termination(this);
    }

    /// <summary>Field number for the "termination_date" field.</summary>
    public const int TerminationDateFieldNumber = 1;
    private global::Google.Type.Date terminationDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date TerminationDate {
      get { return terminationDate_; }
      set {
        terminationDate_ = value;
      }
    }

    /// <summary>Field number for the "termination_reason" field.</summary>
    public const int TerminationReasonFieldNumber = 2;
    private string terminationReason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TerminationReason {
      get { return terminationReason_; }
      set {
        terminationReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Termination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Termination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TerminationDate, other.TerminationDate)) return false;
      if (TerminationReason != other.TerminationReason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (terminationDate_ != null) hash ^= TerminationDate.GetHashCode();
      if (TerminationReason.Length != 0) hash ^= TerminationReason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (terminationDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TerminationDate);
      }
      if (TerminationReason.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TerminationReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (terminationDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TerminationDate);
      }
      if (TerminationReason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TerminationReason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Termination other) {
      if (other == null) {
        return;
      }
      if (other.terminationDate_ != null) {
        if (terminationDate_ == null) {
          TerminationDate = new global::Google.Type.Date();
        }
        TerminationDate.MergeFrom(other.TerminationDate);
      }
      if (other.TerminationReason.Length != 0) {
        TerminationReason = other.TerminationReason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (terminationDate_ == null) {
              TerminationDate = new global::Google.Type.Date();
            }
            input.ReadMessage(TerminationDate);
            break;
          }
          case 18: {
            TerminationReason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Lease event that has occurred.
  /// </summary>
  public sealed partial class LeaseEvent : pb::IMessage<LeaseEvent> {
    private static readonly pb::MessageParser<LeaseEvent> _parser = new pb::MessageParser<LeaseEvent>(() => new LeaseEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaseEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseEvent(LeaseEvent other) : this() {
      eventId_ = other.eventId_;
      eventCreatedTime_ = other.eventCreatedTime_ != null ? other.eventCreatedTime_.Clone() : null;
      eventEffectiveDate_ = other.eventEffectiveDate_ != null ? other.eventEffectiveDate_.Clone() : null;
      eventType_ = other.eventType_;
      eventPayload_ = other.eventPayload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseEvent Clone() {
      return new LeaseEvent(this);
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 1;
    private int eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    /// <summary>Field number for the "event_created_time" field.</summary>
    public const int EventCreatedTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp eventCreatedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EventCreatedTime {
      get { return eventCreatedTime_; }
      set {
        eventCreatedTime_ = value;
      }
    }

    /// <summary>Field number for the "event_effective_date" field.</summary>
    public const int EventEffectiveDateFieldNumber = 3;
    private global::Google.Type.Date eventEffectiveDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date EventEffectiveDate {
      get { return eventEffectiveDate_; }
      set {
        eventEffectiveDate_ = value;
      }
    }

    /// <summary>Field number for the "event_type" field.</summary>
    public const int EventTypeFieldNumber = 4;
    private string eventType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventType {
      get { return eventType_; }
      set {
        eventType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_payload" field.</summary>
    public const int EventPayloadFieldNumber = 5;
    private string eventPayload_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventPayload {
      get { return eventPayload_; }
      set {
        eventPayload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaseEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaseEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (!object.Equals(EventCreatedTime, other.EventCreatedTime)) return false;
      if (!object.Equals(EventEffectiveDate, other.EventEffectiveDate)) return false;
      if (EventType != other.EventType) return false;
      if (EventPayload != other.EventPayload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId != 0) hash ^= EventId.GetHashCode();
      if (eventCreatedTime_ != null) hash ^= EventCreatedTime.GetHashCode();
      if (eventEffectiveDate_ != null) hash ^= EventEffectiveDate.GetHashCode();
      if (EventType.Length != 0) hash ^= EventType.GetHashCode();
      if (EventPayload.Length != 0) hash ^= EventPayload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EventId);
      }
      if (eventCreatedTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventCreatedTime);
      }
      if (eventEffectiveDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EventEffectiveDate);
      }
      if (EventType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EventType);
      }
      if (EventPayload.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EventPayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventId);
      }
      if (eventCreatedTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventCreatedTime);
      }
      if (eventEffectiveDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventEffectiveDate);
      }
      if (EventType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventType);
      }
      if (EventPayload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventPayload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaseEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventId != 0) {
        EventId = other.EventId;
      }
      if (other.eventCreatedTime_ != null) {
        if (eventCreatedTime_ == null) {
          EventCreatedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EventCreatedTime.MergeFrom(other.EventCreatedTime);
      }
      if (other.eventEffectiveDate_ != null) {
        if (eventEffectiveDate_ == null) {
          EventEffectiveDate = new global::Google.Type.Date();
        }
        EventEffectiveDate.MergeFrom(other.EventEffectiveDate);
      }
      if (other.EventType.Length != 0) {
        EventType = other.EventType;
      }
      if (other.EventPayload.Length != 0) {
        EventPayload = other.EventPayload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventId = input.ReadInt32();
            break;
          }
          case 18: {
            if (eventCreatedTime_ == null) {
              EventCreatedTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EventCreatedTime);
            break;
          }
          case 26: {
            if (eventEffectiveDate_ == null) {
              EventEffectiveDate = new global::Google.Type.Date();
            }
            input.ReadMessage(EventEffectiveDate);
            break;
          }
          case 34: {
            EventType = input.ReadString();
            break;
          }
          case 42: {
            EventPayload = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Observation of a lease at a point in time.
  /// </summary>
  public sealed partial class LeaseObservation : pb::IMessage<LeaseObservation> {
    private static readonly pb::MessageParser<LeaseObservation> _parser = new pb::MessageParser<LeaseObservation>(() => new LeaseObservation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaseObservation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tutorial.Lease.V1.LeaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseObservation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseObservation(LeaseObservation other) : this() {
      leaseId_ = other.leaseId_;
      userId_ = other.userId_;
      createdAtTime_ = other.createdAtTime_ != null ? other.createdAtTime_.Clone() : null;
      updatedAtTime_ = other.updatedAtTime_ != null ? other.updatedAtTime_.Clone() : null;
      updatedOnDate_ = other.updatedOnDate_ != null ? other.updatedOnDate_.Clone() : null;
      commencementDate_ = other.commencementDate_ != null ? other.commencementDate_.Clone() : null;
      expirationDate_ = other.expirationDate_ != null ? other.expirationDate_.Clone() : null;
      monthlyPaymentAmount_ = other.monthlyPaymentAmount_ != null ? other.monthlyPaymentAmount_.Clone() : null;
      totalScheduled_ = other.totalScheduled_ != null ? other.totalScheduled_.Clone() : null;
      totalPaid_ = other.totalPaid_ != null ? other.totalPaid_.Clone() : null;
      amountDue_ = other.amountDue_ != null ? other.amountDue_.Clone() : null;
      leaseStatus_ = other.leaseStatus_;
      terminatedDate_ = other.terminatedDate_ != null ? other.terminatedDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaseObservation Clone() {
      return new LeaseObservation(this);
    }

    /// <summary>Field number for the "lease_id" field.</summary>
    public const int LeaseIdFieldNumber = 1;
    private string leaseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaseId {
      get { return leaseId_; }
      set {
        leaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at_time" field.</summary>
    public const int CreatedAtTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAtTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAtTime {
      get { return createdAtTime_; }
      set {
        createdAtTime_ = value;
      }
    }

    /// <summary>Field number for the "updated_at_time" field.</summary>
    public const int UpdatedAtTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updatedAtTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdatedAtTime {
      get { return updatedAtTime_; }
      set {
        updatedAtTime_ = value;
      }
    }

    /// <summary>Field number for the "updated_on_date" field.</summary>
    public const int UpdatedOnDateFieldNumber = 5;
    private global::Google.Type.Date updatedOnDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date UpdatedOnDate {
      get { return updatedOnDate_; }
      set {
        updatedOnDate_ = value;
      }
    }

    /// <summary>Field number for the "commencement_date" field.</summary>
    public const int CommencementDateFieldNumber = 6;
    private global::Google.Type.Date commencementDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date CommencementDate {
      get { return commencementDate_; }
      set {
        commencementDate_ = value;
      }
    }

    /// <summary>Field number for the "expiration_date" field.</summary>
    public const int ExpirationDateFieldNumber = 7;
    private global::Google.Type.Date expirationDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date ExpirationDate {
      get { return expirationDate_; }
      set {
        expirationDate_ = value;
      }
    }

    /// <summary>Field number for the "monthly_payment_amount" field.</summary>
    public const int MonthlyPaymentAmountFieldNumber = 8;
    private global::Google.Type.Money monthlyPaymentAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money MonthlyPaymentAmount {
      get { return monthlyPaymentAmount_; }
      set {
        monthlyPaymentAmount_ = value;
      }
    }

    /// <summary>Field number for the "total_scheduled" field.</summary>
    public const int TotalScheduledFieldNumber = 9;
    private global::Google.Type.Money totalScheduled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money TotalScheduled {
      get { return totalScheduled_; }
      set {
        totalScheduled_ = value;
      }
    }

    /// <summary>Field number for the "total_paid" field.</summary>
    public const int TotalPaidFieldNumber = 10;
    private global::Google.Type.Money totalPaid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money TotalPaid {
      get { return totalPaid_; }
      set {
        totalPaid_ = value;
      }
    }

    /// <summary>Field number for the "amount_due" field.</summary>
    public const int AmountDueFieldNumber = 11;
    private global::Google.Type.Money amountDue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Money AmountDue {
      get { return amountDue_; }
      set {
        amountDue_ = value;
      }
    }

    /// <summary>Field number for the "lease_status" field.</summary>
    public const int LeaseStatusFieldNumber = 12;
    private global::Tutorial.Lease.V1.LeaseStatus leaseStatus_ = global::Tutorial.Lease.V1.LeaseStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tutorial.Lease.V1.LeaseStatus LeaseStatus {
      get { return leaseStatus_; }
      set {
        leaseStatus_ = value;
      }
    }

    /// <summary>Field number for the "terminated_date" field.</summary>
    public const int TerminatedDateFieldNumber = 13;
    private global::Google.Type.Date terminatedDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date TerminatedDate {
      get { return terminatedDate_; }
      set {
        terminatedDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaseObservation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaseObservation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaseId != other.LeaseId) return false;
      if (UserId != other.UserId) return false;
      if (!object.Equals(CreatedAtTime, other.CreatedAtTime)) return false;
      if (!object.Equals(UpdatedAtTime, other.UpdatedAtTime)) return false;
      if (!object.Equals(UpdatedOnDate, other.UpdatedOnDate)) return false;
      if (!object.Equals(CommencementDate, other.CommencementDate)) return false;
      if (!object.Equals(ExpirationDate, other.ExpirationDate)) return false;
      if (!object.Equals(MonthlyPaymentAmount, other.MonthlyPaymentAmount)) return false;
      if (!object.Equals(TotalScheduled, other.TotalScheduled)) return false;
      if (!object.Equals(TotalPaid, other.TotalPaid)) return false;
      if (!object.Equals(AmountDue, other.AmountDue)) return false;
      if (LeaseStatus != other.LeaseStatus) return false;
      if (!object.Equals(TerminatedDate, other.TerminatedDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaseId.Length != 0) hash ^= LeaseId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (createdAtTime_ != null) hash ^= CreatedAtTime.GetHashCode();
      if (updatedAtTime_ != null) hash ^= UpdatedAtTime.GetHashCode();
      if (updatedOnDate_ != null) hash ^= UpdatedOnDate.GetHashCode();
      if (commencementDate_ != null) hash ^= CommencementDate.GetHashCode();
      if (expirationDate_ != null) hash ^= ExpirationDate.GetHashCode();
      if (monthlyPaymentAmount_ != null) hash ^= MonthlyPaymentAmount.GetHashCode();
      if (totalScheduled_ != null) hash ^= TotalScheduled.GetHashCode();
      if (totalPaid_ != null) hash ^= TotalPaid.GetHashCode();
      if (amountDue_ != null) hash ^= AmountDue.GetHashCode();
      if (LeaseStatus != global::Tutorial.Lease.V1.LeaseStatus.Unspecified) hash ^= LeaseStatus.GetHashCode();
      if (terminatedDate_ != null) hash ^= TerminatedDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaseId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaseId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (createdAtTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAtTime);
      }
      if (updatedAtTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdatedAtTime);
      }
      if (updatedOnDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdatedOnDate);
      }
      if (commencementDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CommencementDate);
      }
      if (expirationDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExpirationDate);
      }
      if (monthlyPaymentAmount_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MonthlyPaymentAmount);
      }
      if (totalScheduled_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TotalScheduled);
      }
      if (totalPaid_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TotalPaid);
      }
      if (amountDue_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AmountDue);
      }
      if (LeaseStatus != global::Tutorial.Lease.V1.LeaseStatus.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) LeaseStatus);
      }
      if (terminatedDate_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TerminatedDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaseId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (createdAtTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAtTime);
      }
      if (updatedAtTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedAtTime);
      }
      if (updatedOnDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedOnDate);
      }
      if (commencementDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommencementDate);
      }
      if (expirationDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationDate);
      }
      if (monthlyPaymentAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonthlyPaymentAmount);
      }
      if (totalScheduled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalScheduled);
      }
      if (totalPaid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TotalPaid);
      }
      if (amountDue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AmountDue);
      }
      if (LeaseStatus != global::Tutorial.Lease.V1.LeaseStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LeaseStatus);
      }
      if (terminatedDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TerminatedDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaseObservation other) {
      if (other == null) {
        return;
      }
      if (other.LeaseId.Length != 0) {
        LeaseId = other.LeaseId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.createdAtTime_ != null) {
        if (createdAtTime_ == null) {
          CreatedAtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAtTime.MergeFrom(other.CreatedAtTime);
      }
      if (other.updatedAtTime_ != null) {
        if (updatedAtTime_ == null) {
          UpdatedAtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdatedAtTime.MergeFrom(other.UpdatedAtTime);
      }
      if (other.updatedOnDate_ != null) {
        if (updatedOnDate_ == null) {
          UpdatedOnDate = new global::Google.Type.Date();
        }
        UpdatedOnDate.MergeFrom(other.UpdatedOnDate);
      }
      if (other.commencementDate_ != null) {
        if (commencementDate_ == null) {
          CommencementDate = new global::Google.Type.Date();
        }
        CommencementDate.MergeFrom(other.CommencementDate);
      }
      if (other.expirationDate_ != null) {
        if (expirationDate_ == null) {
          ExpirationDate = new global::Google.Type.Date();
        }
        ExpirationDate.MergeFrom(other.ExpirationDate);
      }
      if (other.monthlyPaymentAmount_ != null) {
        if (monthlyPaymentAmount_ == null) {
          MonthlyPaymentAmount = new global::Google.Type.Money();
        }
        MonthlyPaymentAmount.MergeFrom(other.MonthlyPaymentAmount);
      }
      if (other.totalScheduled_ != null) {
        if (totalScheduled_ == null) {
          TotalScheduled = new global::Google.Type.Money();
        }
        TotalScheduled.MergeFrom(other.TotalScheduled);
      }
      if (other.totalPaid_ != null) {
        if (totalPaid_ == null) {
          TotalPaid = new global::Google.Type.Money();
        }
        TotalPaid.MergeFrom(other.TotalPaid);
      }
      if (other.amountDue_ != null) {
        if (amountDue_ == null) {
          AmountDue = new global::Google.Type.Money();
        }
        AmountDue.MergeFrom(other.AmountDue);
      }
      if (other.LeaseStatus != global::Tutorial.Lease.V1.LeaseStatus.Unspecified) {
        LeaseStatus = other.LeaseStatus;
      }
      if (other.terminatedDate_ != null) {
        if (terminatedDate_ == null) {
          TerminatedDate = new global::Google.Type.Date();
        }
        TerminatedDate.MergeFrom(other.TerminatedDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaseId = input.ReadString();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAtTime_ == null) {
              CreatedAtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAtTime);
            break;
          }
          case 34: {
            if (updatedAtTime_ == null) {
              UpdatedAtTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdatedAtTime);
            break;
          }
          case 42: {
            if (updatedOnDate_ == null) {
              UpdatedOnDate = new global::Google.Type.Date();
            }
            input.ReadMessage(UpdatedOnDate);
            break;
          }
          case 50: {
            if (commencementDate_ == null) {
              CommencementDate = new global::Google.Type.Date();
            }
            input.ReadMessage(CommencementDate);
            break;
          }
          case 58: {
            if (expirationDate_ == null) {
              ExpirationDate = new global::Google.Type.Date();
            }
            input.ReadMessage(ExpirationDate);
            break;
          }
          case 66: {
            if (monthlyPaymentAmount_ == null) {
              MonthlyPaymentAmount = new global::Google.Type.Money();
            }
            input.ReadMessage(MonthlyPaymentAmount);
            break;
          }
          case 74: {
            if (totalScheduled_ == null) {
              TotalScheduled = new global::Google.Type.Money();
            }
            input.ReadMessage(TotalScheduled);
            break;
          }
          case 82: {
            if (totalPaid_ == null) {
              TotalPaid = new global::Google.Type.Money();
            }
            input.ReadMessage(TotalPaid);
            break;
          }
          case 90: {
            if (amountDue_ == null) {
              AmountDue = new global::Google.Type.Money();
            }
            input.ReadMessage(AmountDue);
            break;
          }
          case 96: {
            LeaseStatus = (global::Tutorial.Lease.V1.LeaseStatus) input.ReadEnum();
            break;
          }
          case 106: {
            if (terminatedDate_ == null) {
              TerminatedDate = new global::Google.Type.Date();
            }
            input.ReadMessage(TerminatedDate);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
