syntax = "proto3";
package lease;

option csharp_namespace = "Lease.Proto";

import "google/protobuf/timestamp.proto";

service LeaseService {
    rpc Execute(LeaseCommand) returns (ExecuteResponse) {}
    rpc Query(LeaseQuery) returns (LeaseState) {}
}

enum LeaseStatus {
    current = 0;
    delinquent = 1;
    terminated = 2;
}

message AsOfDate {
    google.protobuf.Timestamp effective_date = 1;
    google.protobuf.Timestamp created_date = 2;
}

message LeaseQuery {
    string lease_id = 1;
    AsOfDate as_of_date = 2;
}

message Lease {
    string user_id = 1;
    google.protobuf.Timestamp start_date = 2;
    google.protobuf.Timestamp maturity_date = 3;
    float monthly_payment_amount = 4;
}

message Payment {
    string payment_id = 1;
    float payment_amount = 2;
}

message LeaseCommand {
    google.protobuf.Timestamp effective_date = 2;
    oneof command {
        Lease create_lease = 3;
        Payment schedule_payment = 4;
        Payment receive_payment = 5;
        bool terminate_lease = 5;
    }
}

message Command {
    string lease_id = 1;
    oneof command {
        int32 delete_event = 2;
        LeaseCommand lease_command = 3;
    }
}

message ExecuteResponse {
    oneof response {
        string success = 1;
        string failure = 2;
    }
}

message LeaseObservation {
    google.protobuf.Timestamp observation_date = 1;
    string lease_id = 2;
    string user_id = 3;
    google.protobuf.Timestamp start_date = 4;
    google.protobuf.Timestamp maturity_date = 5;
    float monthly_payment_amount = 6;
    float total_scheduled = 7;
    float total_paid = 8;
    float amount_due = 9;
    LeaseStatus lease_status = 10;
}
