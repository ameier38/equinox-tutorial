# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from tutorial.lease.v1 import lease_api_pb2 as tutorial_dot_lease_dot_v1_dot_lease__api__pb2


class LeaseAPIStub(object):
  """API to handle interactions with the Lease.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ListLeases = channel.unary_unary(
        '/tutorial.lease.v1.LeaseAPI/ListLeases',
        request_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.ListLeasesRequest.SerializeToString,
        response_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.ListLeasesResponse.FromString,
        )
    self.GetLease = channel.unary_unary(
        '/tutorial.lease.v1.LeaseAPI/GetLease',
        request_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.GetLeaseRequest.SerializeToString,
        response_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.GetLeaseResponse.FromString,
        )
    self.GetLeaseEvents = channel.unary_unary(
        '/tutorial.lease.v1.LeaseAPI/GetLeaseEvents',
        request_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.GetLeaseEventsRequest.SerializeToString,
        response_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.GetLeaseEventsResponse.FromString,
        )
    self.CreateLease = channel.unary_unary(
        '/tutorial.lease.v1.LeaseAPI/CreateLease',
        request_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.CreateLeaseRequest.SerializeToString,
        response_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.CreateLeaseResponse.FromString,
        )
    self.TerminateLease = channel.unary_unary(
        '/tutorial.lease.v1.LeaseAPI/TerminateLease',
        request_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.TerminateLeaseRequest.SerializeToString,
        response_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.TerminateLeaseResponse.FromString,
        )
    self.SchedulePayment = channel.unary_unary(
        '/tutorial.lease.v1.LeaseAPI/SchedulePayment',
        request_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.SchedulePaymentRequest.SerializeToString,
        response_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.SchedulePaymentResponse.FromString,
        )
    self.ReceivePayment = channel.unary_unary(
        '/tutorial.lease.v1.LeaseAPI/ReceivePayment',
        request_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.ReceivePaymentRequest.SerializeToString,
        response_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.ReceivePaymentResponse.FromString,
        )


class LeaseAPIServicer(object):
  """API to handle interactions with the Lease.
  """

  def ListLeases(self, request, context):
    """List the leases that have been created.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLease(self, request, context):
    """Get a lease as of a point in time.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetLeaseEvents(self, request, context):
    """Get the lease events that have occurred as of a point in time.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateLease(self, request, context):
    """Create a new lease.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TerminateLease(self, request, context):
    """Terminate an existing lease.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SchedulePayment(self, request, context):
    """Schedule a payment.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReceivePayment(self, request, context):
    """Receive a payment.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LeaseAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ListLeases': grpc.unary_unary_rpc_method_handler(
          servicer.ListLeases,
          request_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.ListLeasesRequest.FromString,
          response_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.ListLeasesResponse.SerializeToString,
      ),
      'GetLease': grpc.unary_unary_rpc_method_handler(
          servicer.GetLease,
          request_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.GetLeaseRequest.FromString,
          response_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.GetLeaseResponse.SerializeToString,
      ),
      'GetLeaseEvents': grpc.unary_unary_rpc_method_handler(
          servicer.GetLeaseEvents,
          request_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.GetLeaseEventsRequest.FromString,
          response_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.GetLeaseEventsResponse.SerializeToString,
      ),
      'CreateLease': grpc.unary_unary_rpc_method_handler(
          servicer.CreateLease,
          request_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.CreateLeaseRequest.FromString,
          response_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.CreateLeaseResponse.SerializeToString,
      ),
      'TerminateLease': grpc.unary_unary_rpc_method_handler(
          servicer.TerminateLease,
          request_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.TerminateLeaseRequest.FromString,
          response_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.TerminateLeaseResponse.SerializeToString,
      ),
      'SchedulePayment': grpc.unary_unary_rpc_method_handler(
          servicer.SchedulePayment,
          request_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.SchedulePaymentRequest.FromString,
          response_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.SchedulePaymentResponse.SerializeToString,
      ),
      'ReceivePayment': grpc.unary_unary_rpc_method_handler(
          servicer.ReceivePayment,
          request_deserializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.ReceivePaymentRequest.FromString,
          response_serializer=tutorial_dot_lease_dot_v1_dot_lease__api__pb2.ReceivePaymentResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'tutorial.lease.v1.LeaseAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
