// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tutorial/lease/v1/lease_api.proto

package leasev1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	date "google.golang.org/genproto/googleapis/type/date"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListLeasesRequest struct {
	AsOfDate             *AsOfDate `protobuf:"bytes,1,opt,name=as_of_date,json=asOfDate,proto3" json:"as_of_date,omitempty"`
	PageSize             int32     `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string    `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListLeasesRequest) Reset()         { *m = ListLeasesRequest{} }
func (m *ListLeasesRequest) String() string { return proto.CompactTextString(m) }
func (*ListLeasesRequest) ProtoMessage()    {}
func (*ListLeasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{0}
}

func (m *ListLeasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLeasesRequest.Unmarshal(m, b)
}
func (m *ListLeasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLeasesRequest.Marshal(b, m, deterministic)
}
func (m *ListLeasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLeasesRequest.Merge(m, src)
}
func (m *ListLeasesRequest) XXX_Size() int {
	return xxx_messageInfo_ListLeasesRequest.Size(m)
}
func (m *ListLeasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLeasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLeasesRequest proto.InternalMessageInfo

func (m *ListLeasesRequest) GetAsOfDate() *AsOfDate {
	if m != nil {
		return m.AsOfDate
	}
	return nil
}

func (m *ListLeasesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListLeasesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListLeasesResponse struct {
	Leases               []*Lease `protobuf:"bytes,1,rep,name=leases,proto3" json:"leases,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLeasesResponse) Reset()         { *m = ListLeasesResponse{} }
func (m *ListLeasesResponse) String() string { return proto.CompactTextString(m) }
func (*ListLeasesResponse) ProtoMessage()    {}
func (*ListLeasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{1}
}

func (m *ListLeasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLeasesResponse.Unmarshal(m, b)
}
func (m *ListLeasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLeasesResponse.Marshal(b, m, deterministic)
}
func (m *ListLeasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLeasesResponse.Merge(m, src)
}
func (m *ListLeasesResponse) XXX_Size() int {
	return xxx_messageInfo_ListLeasesResponse.Size(m)
}
func (m *ListLeasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLeasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLeasesResponse proto.InternalMessageInfo

func (m *ListLeasesResponse) GetLeases() []*Lease {
	if m != nil {
		return m.Leases
	}
	return nil
}

func (m *ListLeasesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetLeaseRequest struct {
	LeaseId              string    `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	AsOfDate             *AsOfDate `protobuf:"bytes,2,opt,name=as_of_date,json=asOfDate,proto3" json:"as_of_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetLeaseRequest) Reset()         { *m = GetLeaseRequest{} }
func (m *GetLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*GetLeaseRequest) ProtoMessage()    {}
func (*GetLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{2}
}

func (m *GetLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeaseRequest.Unmarshal(m, b)
}
func (m *GetLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeaseRequest.Marshal(b, m, deterministic)
}
func (m *GetLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeaseRequest.Merge(m, src)
}
func (m *GetLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_GetLeaseRequest.Size(m)
}
func (m *GetLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeaseRequest proto.InternalMessageInfo

func (m *GetLeaseRequest) GetLeaseId() string {
	if m != nil {
		return m.LeaseId
	}
	return ""
}

func (m *GetLeaseRequest) GetAsOfDate() *AsOfDate {
	if m != nil {
		return m.AsOfDate
	}
	return nil
}

type GetLeaseResponse struct {
	Lease                *LeaseObservation `protobuf:"bytes,1,opt,name=lease,proto3" json:"lease,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetLeaseResponse) Reset()         { *m = GetLeaseResponse{} }
func (m *GetLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*GetLeaseResponse) ProtoMessage()    {}
func (*GetLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{3}
}

func (m *GetLeaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLeaseResponse.Unmarshal(m, b)
}
func (m *GetLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLeaseResponse.Marshal(b, m, deterministic)
}
func (m *GetLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLeaseResponse.Merge(m, src)
}
func (m *GetLeaseResponse) XXX_Size() int {
	return xxx_messageInfo_GetLeaseResponse.Size(m)
}
func (m *GetLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetLeaseResponse proto.InternalMessageInfo

func (m *GetLeaseResponse) GetLease() *LeaseObservation {
	if m != nil {
		return m.Lease
	}
	return nil
}

type ListLeaseEventsRequest struct {
	LeaseId              string    `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	AsOfDate             *AsOfDate `protobuf:"bytes,2,opt,name=as_of_date,json=asOfDate,proto3" json:"as_of_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListLeaseEventsRequest) Reset()         { *m = ListLeaseEventsRequest{} }
func (m *ListLeaseEventsRequest) String() string { return proto.CompactTextString(m) }
func (*ListLeaseEventsRequest) ProtoMessage()    {}
func (*ListLeaseEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{4}
}

func (m *ListLeaseEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLeaseEventsRequest.Unmarshal(m, b)
}
func (m *ListLeaseEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLeaseEventsRequest.Marshal(b, m, deterministic)
}
func (m *ListLeaseEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLeaseEventsRequest.Merge(m, src)
}
func (m *ListLeaseEventsRequest) XXX_Size() int {
	return xxx_messageInfo_ListLeaseEventsRequest.Size(m)
}
func (m *ListLeaseEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLeaseEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLeaseEventsRequest proto.InternalMessageInfo

func (m *ListLeaseEventsRequest) GetLeaseId() string {
	if m != nil {
		return m.LeaseId
	}
	return ""
}

func (m *ListLeaseEventsRequest) GetAsOfDate() *AsOfDate {
	if m != nil {
		return m.AsOfDate
	}
	return nil
}

type ListLeaseEventsResponse struct {
	LeaseId              string        `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	Events               []*LeaseEvent `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListLeaseEventsResponse) Reset()         { *m = ListLeaseEventsResponse{} }
func (m *ListLeaseEventsResponse) String() string { return proto.CompactTextString(m) }
func (*ListLeaseEventsResponse) ProtoMessage()    {}
func (*ListLeaseEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{5}
}

func (m *ListLeaseEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLeaseEventsResponse.Unmarshal(m, b)
}
func (m *ListLeaseEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLeaseEventsResponse.Marshal(b, m, deterministic)
}
func (m *ListLeaseEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLeaseEventsResponse.Merge(m, src)
}
func (m *ListLeaseEventsResponse) XXX_Size() int {
	return xxx_messageInfo_ListLeaseEventsResponse.Size(m)
}
func (m *ListLeaseEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLeaseEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLeaseEventsResponse proto.InternalMessageInfo

func (m *ListLeaseEventsResponse) GetLeaseId() string {
	if m != nil {
		return m.LeaseId
	}
	return ""
}

func (m *ListLeaseEventsResponse) GetEvents() []*LeaseEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type CreateLeaseRequest struct {
	Lease                *Lease   `protobuf:"bytes,1,opt,name=lease,proto3" json:"lease,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLeaseRequest) Reset()         { *m = CreateLeaseRequest{} }
func (m *CreateLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLeaseRequest) ProtoMessage()    {}
func (*CreateLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{6}
}

func (m *CreateLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLeaseRequest.Unmarshal(m, b)
}
func (m *CreateLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLeaseRequest.Marshal(b, m, deterministic)
}
func (m *CreateLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLeaseRequest.Merge(m, src)
}
func (m *CreateLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLeaseRequest.Size(m)
}
func (m *CreateLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLeaseRequest proto.InternalMessageInfo

func (m *CreateLeaseRequest) GetLease() *Lease {
	if m != nil {
		return m.Lease
	}
	return nil
}

type CreateLeaseResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLeaseResponse) Reset()         { *m = CreateLeaseResponse{} }
func (m *CreateLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLeaseResponse) ProtoMessage()    {}
func (*CreateLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{7}
}

func (m *CreateLeaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLeaseResponse.Unmarshal(m, b)
}
func (m *CreateLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLeaseResponse.Marshal(b, m, deterministic)
}
func (m *CreateLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLeaseResponse.Merge(m, src)
}
func (m *CreateLeaseResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLeaseResponse.Size(m)
}
func (m *CreateLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLeaseResponse proto.InternalMessageInfo

func (m *CreateLeaseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TerminateLeaseRequest struct {
	EffectiveDate        *date.Date `protobuf:"bytes,1,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TerminateLeaseRequest) Reset()         { *m = TerminateLeaseRequest{} }
func (m *TerminateLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*TerminateLeaseRequest) ProtoMessage()    {}
func (*TerminateLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{8}
}

func (m *TerminateLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateLeaseRequest.Unmarshal(m, b)
}
func (m *TerminateLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateLeaseRequest.Marshal(b, m, deterministic)
}
func (m *TerminateLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateLeaseRequest.Merge(m, src)
}
func (m *TerminateLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_TerminateLeaseRequest.Size(m)
}
func (m *TerminateLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateLeaseRequest proto.InternalMessageInfo

func (m *TerminateLeaseRequest) GetEffectiveDate() *date.Date {
	if m != nil {
		return m.EffectiveDate
	}
	return nil
}

type TerminateLeaseResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateLeaseResponse) Reset()         { *m = TerminateLeaseResponse{} }
func (m *TerminateLeaseResponse) String() string { return proto.CompactTextString(m) }
func (*TerminateLeaseResponse) ProtoMessage()    {}
func (*TerminateLeaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{9}
}

func (m *TerminateLeaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateLeaseResponse.Unmarshal(m, b)
}
func (m *TerminateLeaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateLeaseResponse.Marshal(b, m, deterministic)
}
func (m *TerminateLeaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateLeaseResponse.Merge(m, src)
}
func (m *TerminateLeaseResponse) XXX_Size() int {
	return xxx_messageInfo_TerminateLeaseResponse.Size(m)
}
func (m *TerminateLeaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateLeaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateLeaseResponse proto.InternalMessageInfo

func (m *TerminateLeaseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SchedulePaymentRequest struct {
	Payment              *Payment `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchedulePaymentRequest) Reset()         { *m = SchedulePaymentRequest{} }
func (m *SchedulePaymentRequest) String() string { return proto.CompactTextString(m) }
func (*SchedulePaymentRequest) ProtoMessage()    {}
func (*SchedulePaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{10}
}

func (m *SchedulePaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulePaymentRequest.Unmarshal(m, b)
}
func (m *SchedulePaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulePaymentRequest.Marshal(b, m, deterministic)
}
func (m *SchedulePaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulePaymentRequest.Merge(m, src)
}
func (m *SchedulePaymentRequest) XXX_Size() int {
	return xxx_messageInfo_SchedulePaymentRequest.Size(m)
}
func (m *SchedulePaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulePaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulePaymentRequest proto.InternalMessageInfo

func (m *SchedulePaymentRequest) GetPayment() *Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

type SchedulePaymentResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SchedulePaymentResponse) Reset()         { *m = SchedulePaymentResponse{} }
func (m *SchedulePaymentResponse) String() string { return proto.CompactTextString(m) }
func (*SchedulePaymentResponse) ProtoMessage()    {}
func (*SchedulePaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{11}
}

func (m *SchedulePaymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SchedulePaymentResponse.Unmarshal(m, b)
}
func (m *SchedulePaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SchedulePaymentResponse.Marshal(b, m, deterministic)
}
func (m *SchedulePaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SchedulePaymentResponse.Merge(m, src)
}
func (m *SchedulePaymentResponse) XXX_Size() int {
	return xxx_messageInfo_SchedulePaymentResponse.Size(m)
}
func (m *SchedulePaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SchedulePaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SchedulePaymentResponse proto.InternalMessageInfo

func (m *SchedulePaymentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReceivePaymentRequest struct {
	EffectiveDate        *date.Date `protobuf:"bytes,1,opt,name=effective_date,json=effectiveDate,proto3" json:"effective_date,omitempty"`
	Payment              *Payment   `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReceivePaymentRequest) Reset()         { *m = ReceivePaymentRequest{} }
func (m *ReceivePaymentRequest) String() string { return proto.CompactTextString(m) }
func (*ReceivePaymentRequest) ProtoMessage()    {}
func (*ReceivePaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{12}
}

func (m *ReceivePaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivePaymentRequest.Unmarshal(m, b)
}
func (m *ReceivePaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivePaymentRequest.Marshal(b, m, deterministic)
}
func (m *ReceivePaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivePaymentRequest.Merge(m, src)
}
func (m *ReceivePaymentRequest) XXX_Size() int {
	return xxx_messageInfo_ReceivePaymentRequest.Size(m)
}
func (m *ReceivePaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivePaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivePaymentRequest proto.InternalMessageInfo

func (m *ReceivePaymentRequest) GetEffectiveDate() *date.Date {
	if m != nil {
		return m.EffectiveDate
	}
	return nil
}

func (m *ReceivePaymentRequest) GetPayment() *Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

type ReceivePaymentResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceivePaymentResponse) Reset()         { *m = ReceivePaymentResponse{} }
func (m *ReceivePaymentResponse) String() string { return proto.CompactTextString(m) }
func (*ReceivePaymentResponse) ProtoMessage()    {}
func (*ReceivePaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_364b8fa3bf520ad6, []int{13}
}

func (m *ReceivePaymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceivePaymentResponse.Unmarshal(m, b)
}
func (m *ReceivePaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceivePaymentResponse.Marshal(b, m, deterministic)
}
func (m *ReceivePaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceivePaymentResponse.Merge(m, src)
}
func (m *ReceivePaymentResponse) XXX_Size() int {
	return xxx_messageInfo_ReceivePaymentResponse.Size(m)
}
func (m *ReceivePaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceivePaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReceivePaymentResponse proto.InternalMessageInfo

func (m *ReceivePaymentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ListLeasesRequest)(nil), "tutorial.lease.v1.ListLeasesRequest")
	proto.RegisterType((*ListLeasesResponse)(nil), "tutorial.lease.v1.ListLeasesResponse")
	proto.RegisterType((*GetLeaseRequest)(nil), "tutorial.lease.v1.GetLeaseRequest")
	proto.RegisterType((*GetLeaseResponse)(nil), "tutorial.lease.v1.GetLeaseResponse")
	proto.RegisterType((*ListLeaseEventsRequest)(nil), "tutorial.lease.v1.ListLeaseEventsRequest")
	proto.RegisterType((*ListLeaseEventsResponse)(nil), "tutorial.lease.v1.ListLeaseEventsResponse")
	proto.RegisterType((*CreateLeaseRequest)(nil), "tutorial.lease.v1.CreateLeaseRequest")
	proto.RegisterType((*CreateLeaseResponse)(nil), "tutorial.lease.v1.CreateLeaseResponse")
	proto.RegisterType((*TerminateLeaseRequest)(nil), "tutorial.lease.v1.TerminateLeaseRequest")
	proto.RegisterType((*TerminateLeaseResponse)(nil), "tutorial.lease.v1.TerminateLeaseResponse")
	proto.RegisterType((*SchedulePaymentRequest)(nil), "tutorial.lease.v1.SchedulePaymentRequest")
	proto.RegisterType((*SchedulePaymentResponse)(nil), "tutorial.lease.v1.SchedulePaymentResponse")
	proto.RegisterType((*ReceivePaymentRequest)(nil), "tutorial.lease.v1.ReceivePaymentRequest")
	proto.RegisterType((*ReceivePaymentResponse)(nil), "tutorial.lease.v1.ReceivePaymentResponse")
}

func init() { proto.RegisterFile("tutorial/lease/v1/lease_api.proto", fileDescriptor_364b8fa3bf520ad6) }

var fileDescriptor_364b8fa3bf520ad6 = []byte{
	// 679 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xe1, 0x4e, 0xd3, 0x50,
	0x14, 0x4e, 0x4b, 0x80, 0x71, 0x08, 0xe0, 0xae, 0x61, 0xd4, 0x12, 0x92, 0x59, 0x94, 0x0c, 0x7f,
	0x74, 0x6e, 0x68, 0x22, 0x3f, 0x41, 0x8c, 0x21, 0x41, 0x99, 0x65, 0x21, 0x6a, 0x48, 0x9a, 0xcb,
	0x76, 0x36, 0x1a, 0xb6, 0xb6, 0xee, 0x5e, 0x1a, 0xe1, 0x05, 0x4c, 0x7c, 0x0c, 0x7f, 0xfa, 0x08,
	0x3e, 0x82, 0x4f, 0x65, 0x7a, 0x7b, 0xcb, 0xd6, 0xee, 0x8e, 0xa1, 0x89, 0xff, 0xda, 0xd3, 0xef,
	0x9c, 0xf3, 0x9d, 0xef, 0x9e, 0xef, 0x16, 0x1e, 0xf3, 0x2b, 0x1e, 0x0c, 0x3c, 0xda, 0xab, 0xf6,
	0x90, 0x32, 0xac, 0x46, 0xb5, 0xe4, 0xc1, 0xa5, 0xa1, 0x67, 0x87, 0x83, 0x80, 0x07, 0xa4, 0x98,
	0x42, 0x6c, 0xf1, 0xc5, 0x8e, 0x6a, 0x66, 0xa9, 0x1b, 0x04, 0xdd, 0x1e, 0x56, 0xf9, 0x75, 0x88,
	0xd5, 0x36, 0xe5, 0x98, 0x40, 0xcd, 0x8d, 0x09, 0xd5, 0x92, 0xcf, 0xd6, 0x77, 0x0d, 0x8a, 0x47,
	0x1e, 0xe3, 0x47, 0x71, 0x8c, 0x39, 0xf8, 0xe5, 0x0a, 0x19, 0x27, 0xbb, 0x00, 0x94, 0xb9, 0x41,
	0xc7, 0x8d, 0x0b, 0x19, 0x5a, 0x59, 0xab, 0x2c, 0xd6, 0xd7, 0xed, 0xb1, 0xa6, 0xf6, 0x1e, 0x3b,
	0xee, 0x1c, 0x50, 0x8e, 0x4e, 0x81, 0xca, 0x27, 0xb2, 0x0e, 0x0b, 0x21, 0xed, 0xa2, 0xcb, 0xbc,
	0x1b, 0x34, 0xf4, 0xb2, 0x56, 0x99, 0x75, 0x0a, 0x71, 0xe0, 0xc4, 0xbb, 0x41, 0xb2, 0x01, 0x20,
	0x3e, 0xf2, 0xe0, 0x12, 0x7d, 0x63, 0xa6, 0xac, 0x55, 0x16, 0x1c, 0x01, 0x6f, 0xc6, 0x01, 0xcb,
	0x07, 0x32, 0xca, 0x85, 0x85, 0x81, 0xcf, 0x90, 0x3c, 0x87, 0x39, 0xd1, 0x90, 0x19, 0x5a, 0x79,
	0xa6, 0xb2, 0x58, 0x37, 0x14, 0x44, 0x44, 0x8a, 0x23, 0x71, 0x64, 0x0b, 0x56, 0x7c, 0xfc, 0xca,
	0xdd, 0x91, 0x5e, 0xba, 0xe8, 0xb5, 0x14, 0x87, 0x1b, 0xb7, 0xfd, 0xba, 0xb0, 0xf2, 0x16, 0x93,
	0x76, 0xe9, 0xe4, 0x8f, 0xa0, 0x90, 0x88, 0xed, 0xb5, 0xc5, 0xdc, 0x0b, 0xce, 0xbc, 0x78, 0x3f,
	0x6c, 0xe7, 0x44, 0xd1, 0xff, 0x42, 0x14, 0xeb, 0x1d, 0x3c, 0x18, 0x36, 0x92, 0x63, 0xed, 0xc2,
	0xac, 0x48, 0x91, 0xf2, 0x6e, 0x4e, 0x9a, 0xea, 0xf8, 0x9c, 0xe1, 0x20, 0xa2, 0xdc, 0x0b, 0x7c,
	0x27, 0xc9, 0xb0, 0x7c, 0x28, 0xdd, 0xea, 0xf4, 0x26, 0x42, 0x9f, 0xb3, 0xff, 0x4b, 0xff, 0x12,
	0xd6, 0xc6, 0xfa, 0xc9, 0x29, 0xee, 0x68, 0xf8, 0x12, 0xe6, 0x50, 0x80, 0x0d, 0x5d, 0x9c, 0xdb,
	0xc6, 0xa4, 0x09, 0x45, 0x49, 0x47, 0x82, 0xad, 0x03, 0x20, 0xaf, 0x07, 0x48, 0x39, 0x66, 0xce,
	0xc5, 0xce, 0xaa, 0x35, 0x79, 0x07, 0xa4, 0x44, 0x55, 0x78, 0x98, 0xa9, 0x22, 0xe9, 0x1a, 0x30,
	0xdf, 0x47, 0xc6, 0x68, 0x17, 0x53, 0xb6, 0xf2, 0xd5, 0xfa, 0x00, 0xab, 0x4d, 0x1c, 0xf4, 0x3d,
	0x3f, 0xdf, 0xf9, 0x15, 0x2c, 0x63, 0xa7, 0x83, 0x2d, 0xee, 0x45, 0x38, 0xea, 0x87, 0xa2, 0x9d,
	0x38, 0xce, 0x8e, 0x1d, 0x67, 0x0b, 0xc5, 0x96, 0x6e, 0x81, 0x42, 0xb6, 0x3a, 0x94, 0xf2, 0x25,
	0xa7, 0xd2, 0x78, 0x0f, 0xa5, 0x93, 0xd6, 0x05, 0xb6, 0xaf, 0x7a, 0xd8, 0xa0, 0xd7, 0xfd, 0x58,
	0x18, 0xc9, 0xe3, 0x05, 0xcc, 0x87, 0x49, 0x44, 0x12, 0x30, 0x15, 0x1a, 0xa4, 0x39, 0x29, 0xd4,
	0xda, 0x81, 0xb5, 0xb1, 0x7a, 0x53, 0x49, 0x7c, 0xd3, 0x60, 0xd5, 0xc1, 0x16, 0x7a, 0x51, 0x9e,
	0xc4, 0x3f, 0x8b, 0x31, 0x4a, 0x5f, 0xbf, 0x3f, 0xfd, 0x3a, 0x94, 0xf2, 0x44, 0xa6, 0xb1, 0xaf,
	0xff, 0x9a, 0x85, 0x82, 0x90, 0x7b, 0xaf, 0x71, 0x48, 0x3e, 0x01, 0x0c, 0xaf, 0x14, 0xf2, 0x44,
	0xb5, 0x36, 0xf9, 0xdb, 0xcf, 0x7c, 0x3a, 0x05, 0x25, 0x19, 0x5c, 0xc0, 0x4a, 0xce, 0x15, 0x64,
	0xfb, 0xae, 0xcc, 0x8c, 0x53, 0xcd, 0x67, 0xf7, 0x81, 0xca, 0x4e, 0x27, 0x50, 0x48, 0xaf, 0x0f,
	0x62, 0x29, 0xf2, 0x72, 0x97, 0x98, 0xb9, 0x79, 0x27, 0x46, 0x16, 0x3d, 0x83, 0xc5, 0x11, 0x87,
	0x10, 0xd5, 0xd0, 0xe3, 0x3e, 0x34, 0xb7, 0xa6, 0xc1, 0x64, 0x75, 0x84, 0xe5, 0xec, 0xee, 0x93,
	0x8a, 0x22, 0x53, 0xe9, 0x38, 0x73, 0xfb, 0x1e, 0xc8, 0xe1, 0x19, 0xe4, 0xd6, 0x5b, 0x79, 0x06,
	0x6a, 0x4b, 0x29, 0xcf, 0x60, 0x92, 0x5b, 0x10, 0x96, 0xb3, 0x9b, 0xa8, 0x1c, 0x48, 0xe9, 0x1a,
	0xe5, 0x40, 0xea, 0xb5, 0xde, 0x77, 0x61, 0xb5, 0x15, 0xf4, 0xc7, 0xf1, 0xfb, 0x4b, 0xc9, 0x4a,
	0x87, 0x5e, 0x23, 0xfe, 0x6f, 0x37, 0xb4, 0xcf, 0xc9, 0x3d, 0x1b, 0xd5, 0x7e, 0xe8, 0x33, 0xcd,
	0xa3, 0x8f, 0x3f, 0xf5, 0x62, 0x33, 0xcd, 0x11, 0x48, 0xfb, 0xb4, 0xf6, 0x7b, 0x18, 0x3b, 0x13,
	0xb1, 0xb3, 0xd3, 0xda, 0xf9, 0x9c, 0xf8, 0xef, 0xef, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x1e,
	0xcc, 0xe6, 0x86, 0x66, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LeaseAPIClient is the client API for LeaseAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LeaseAPIClient interface {
	// List the leases that have been created.
	ListLeases(ctx context.Context, in *ListLeasesRequest, opts ...grpc.CallOption) (*ListLeasesResponse, error)
	// List the lease events that have occurred as of a point in time.
	ListLeaseEvents(ctx context.Context, in *ListLeaseEventsRequest, opts ...grpc.CallOption) (*ListLeaseEventsResponse, error)
	// Get a lease as of a point in time.
	GetLease(ctx context.Context, in *GetLeaseRequest, opts ...grpc.CallOption) (*GetLeaseResponse, error)
	// Create a new lease.
	CreateLease(ctx context.Context, in *CreateLeaseRequest, opts ...grpc.CallOption) (*CreateLeaseResponse, error)
	// Terminate an existing lease.
	TerminateLease(ctx context.Context, in *TerminateLeaseRequest, opts ...grpc.CallOption) (*TerminateLeaseResponse, error)
	// Schedule a payment.
	SchedulePayment(ctx context.Context, in *SchedulePaymentRequest, opts ...grpc.CallOption) (*SchedulePaymentResponse, error)
	// Receive a payment.
	ReceivePayment(ctx context.Context, in *ReceivePaymentRequest, opts ...grpc.CallOption) (*ReceivePaymentResponse, error)
}

type leaseAPIClient struct {
	cc *grpc.ClientConn
}

func NewLeaseAPIClient(cc *grpc.ClientConn) LeaseAPIClient {
	return &leaseAPIClient{cc}
}

func (c *leaseAPIClient) ListLeases(ctx context.Context, in *ListLeasesRequest, opts ...grpc.CallOption) (*ListLeasesResponse, error) {
	out := new(ListLeasesResponse)
	err := c.cc.Invoke(ctx, "/tutorial.lease.v1.LeaseAPI/ListLeases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseAPIClient) ListLeaseEvents(ctx context.Context, in *ListLeaseEventsRequest, opts ...grpc.CallOption) (*ListLeaseEventsResponse, error) {
	out := new(ListLeaseEventsResponse)
	err := c.cc.Invoke(ctx, "/tutorial.lease.v1.LeaseAPI/ListLeaseEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseAPIClient) GetLease(ctx context.Context, in *GetLeaseRequest, opts ...grpc.CallOption) (*GetLeaseResponse, error) {
	out := new(GetLeaseResponse)
	err := c.cc.Invoke(ctx, "/tutorial.lease.v1.LeaseAPI/GetLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseAPIClient) CreateLease(ctx context.Context, in *CreateLeaseRequest, opts ...grpc.CallOption) (*CreateLeaseResponse, error) {
	out := new(CreateLeaseResponse)
	err := c.cc.Invoke(ctx, "/tutorial.lease.v1.LeaseAPI/CreateLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseAPIClient) TerminateLease(ctx context.Context, in *TerminateLeaseRequest, opts ...grpc.CallOption) (*TerminateLeaseResponse, error) {
	out := new(TerminateLeaseResponse)
	err := c.cc.Invoke(ctx, "/tutorial.lease.v1.LeaseAPI/TerminateLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseAPIClient) SchedulePayment(ctx context.Context, in *SchedulePaymentRequest, opts ...grpc.CallOption) (*SchedulePaymentResponse, error) {
	out := new(SchedulePaymentResponse)
	err := c.cc.Invoke(ctx, "/tutorial.lease.v1.LeaseAPI/SchedulePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *leaseAPIClient) ReceivePayment(ctx context.Context, in *ReceivePaymentRequest, opts ...grpc.CallOption) (*ReceivePaymentResponse, error) {
	out := new(ReceivePaymentResponse)
	err := c.cc.Invoke(ctx, "/tutorial.lease.v1.LeaseAPI/ReceivePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LeaseAPIServer is the server API for LeaseAPI service.
type LeaseAPIServer interface {
	// List the leases that have been created.
	ListLeases(context.Context, *ListLeasesRequest) (*ListLeasesResponse, error)
	// List the lease events that have occurred as of a point in time.
	ListLeaseEvents(context.Context, *ListLeaseEventsRequest) (*ListLeaseEventsResponse, error)
	// Get a lease as of a point in time.
	GetLease(context.Context, *GetLeaseRequest) (*GetLeaseResponse, error)
	// Create a new lease.
	CreateLease(context.Context, *CreateLeaseRequest) (*CreateLeaseResponse, error)
	// Terminate an existing lease.
	TerminateLease(context.Context, *TerminateLeaseRequest) (*TerminateLeaseResponse, error)
	// Schedule a payment.
	SchedulePayment(context.Context, *SchedulePaymentRequest) (*SchedulePaymentResponse, error)
	// Receive a payment.
	ReceivePayment(context.Context, *ReceivePaymentRequest) (*ReceivePaymentResponse, error)
}

// UnimplementedLeaseAPIServer can be embedded to have forward compatible implementations.
type UnimplementedLeaseAPIServer struct {
}

func (*UnimplementedLeaseAPIServer) ListLeases(ctx context.Context, req *ListLeasesRequest) (*ListLeasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLeases not implemented")
}
func (*UnimplementedLeaseAPIServer) ListLeaseEvents(ctx context.Context, req *ListLeaseEventsRequest) (*ListLeaseEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLeaseEvents not implemented")
}
func (*UnimplementedLeaseAPIServer) GetLease(ctx context.Context, req *GetLeaseRequest) (*GetLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLease not implemented")
}
func (*UnimplementedLeaseAPIServer) CreateLease(ctx context.Context, req *CreateLeaseRequest) (*CreateLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLease not implemented")
}
func (*UnimplementedLeaseAPIServer) TerminateLease(ctx context.Context, req *TerminateLeaseRequest) (*TerminateLeaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateLease not implemented")
}
func (*UnimplementedLeaseAPIServer) SchedulePayment(ctx context.Context, req *SchedulePaymentRequest) (*SchedulePaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchedulePayment not implemented")
}
func (*UnimplementedLeaseAPIServer) ReceivePayment(ctx context.Context, req *ReceivePaymentRequest) (*ReceivePaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceivePayment not implemented")
}

func RegisterLeaseAPIServer(s *grpc.Server, srv LeaseAPIServer) {
	s.RegisterService(&_LeaseAPI_serviceDesc, srv)
}

func _LeaseAPI_ListLeases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLeasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseAPIServer).ListLeases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.lease.v1.LeaseAPI/ListLeases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseAPIServer).ListLeases(ctx, req.(*ListLeasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseAPI_ListLeaseEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLeaseEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseAPIServer).ListLeaseEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.lease.v1.LeaseAPI/ListLeaseEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseAPIServer).ListLeaseEvents(ctx, req.(*ListLeaseEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseAPI_GetLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseAPIServer).GetLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.lease.v1.LeaseAPI/GetLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseAPIServer).GetLease(ctx, req.(*GetLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseAPI_CreateLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseAPIServer).CreateLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.lease.v1.LeaseAPI/CreateLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseAPIServer).CreateLease(ctx, req.(*CreateLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseAPI_TerminateLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseAPIServer).TerminateLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.lease.v1.LeaseAPI/TerminateLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseAPIServer).TerminateLease(ctx, req.(*TerminateLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseAPI_SchedulePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SchedulePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseAPIServer).SchedulePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.lease.v1.LeaseAPI/SchedulePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseAPIServer).SchedulePayment(ctx, req.(*SchedulePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LeaseAPI_ReceivePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceivePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LeaseAPIServer).ReceivePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.lease.v1.LeaseAPI/ReceivePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LeaseAPIServer).ReceivePayment(ctx, req.(*ReceivePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LeaseAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tutorial.lease.v1.LeaseAPI",
	HandlerType: (*LeaseAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListLeases",
			Handler:    _LeaseAPI_ListLeases_Handler,
		},
		{
			MethodName: "ListLeaseEvents",
			Handler:    _LeaseAPI_ListLeaseEvents_Handler,
		},
		{
			MethodName: "GetLease",
			Handler:    _LeaseAPI_GetLease_Handler,
		},
		{
			MethodName: "CreateLease",
			Handler:    _LeaseAPI_CreateLease_Handler,
		},
		{
			MethodName: "TerminateLease",
			Handler:    _LeaseAPI_TerminateLease_Handler,
		},
		{
			MethodName: "SchedulePayment",
			Handler:    _LeaseAPI_SchedulePayment_Handler,
		},
		{
			MethodName: "ReceivePayment",
			Handler:    _LeaseAPI_ReceivePayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tutorial/lease/v1/lease_api.proto",
}
