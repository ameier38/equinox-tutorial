openapi: 3.0.0
info:
  title: Ouroboros API
  description: Ouroboros integration test API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
servers:
- url: https://virtserver.swaggerhub.com/ameier38/Ouroboros/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /get:
    post:
      summary: get the state of a dog
      description: get the state of a dog at a particular observation date
      requestBody:
        description: Dog to retrieve
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRequest'
      responses:
        200:
          description: Successfully retrieved dog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DogState'
  /reverse:
    post:
      summary: reverse a dog event
      description: reverse a dog event with specified event number
      requestBody:
        description: dog event to reverse
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReverseRequest'
      responses:
        200:
          description: Successfully reversed dog event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DogState'
  /create:
    post:
      summary: create a dog
      description: create a new dog
      requestBody:
        description: Dog to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequest'
      responses:
        200:
          description: Created dog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DogState'
  /eat:
    post:
      summary: command a dog to eat
      description: command a dog to eat
      requestBody:
        description: Meta for eat command
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EatRequest'
      responses:
        200:
          description: Dog ate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DogState'
  /sleep:
    post:
      summary: command a dog to sleep
      description: command a dog to sleep
      requestBody:
        description: Meta for sleep command
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepRequest'
      responses:
        200:
          description: Dog slept
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DogState'
  /play:
    post:
      summary: command a dog to play
      description: command a dog to play
      requestBody:
        description: Meta for play command
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayRequest'
      responses:
        200:
          description: Dog played
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DogState'
components:
  schemas:
    GetRequest:
      required:
      - dogId
      - observationDate
      - observationType
      type: object
      properties:
        dogId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        observationDate:
          type: string
          format: date-time
        observationType:
          type: string
          example: of
    ReverseRequest:
      required:
      - dogId
      - eventNumber
      type: object
      properties:
        dogId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        eventNumber:
          type: integer
          format: int32
          example: 1
    CreateRequest:
      required:
      - dog
      - dogId
      - effectiveDate
      type: object
      properties:
        dogId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        effectiveDate:
          type: string
          format: date-time
        dog:
          $ref: '#/components/schemas/Dog'
    EatRequest:
      required:
      - dogId
      - effectiveDate
      - weight
      type: object
      properties:
        dogId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        effectiveDate:
          type: string
          format: date-time
        weight:
          type: number
          example: 20.25
    SleepRequest:
      required:
      - dogId
      - effectiveDate
      - timeSpan
      type: object
      properties:
        dogId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        effectiveDate:
          type: string
          format: date-time
        timeSpan:
          type: integer
          format: int32
          example: 2
    PlayRequest:
      required:
      - dogId
      - effectiveDate
      type: object
      properties:
        dogId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        effectiveDate:
          type: string
          format: date-time
    Dog:
      required:
      - birthDate
      - breed
      - name
      type: object
      properties:
        name:
          type: string
          example: Benji
        breed:
          type: string
          example: Maltipoo
        birthDate:
          type: string
          format: date-time
    DogState:
      required:
      - age
      - dog
      - state
      - weight
      type: object
      properties:
        state:
          type: string
          example: Bored
        age:
          type: integer
          format: int32
          example: 3
        weight:
          type: number
          example: 20.25
        dog:
          $ref: '#/components/schemas/Dog'
